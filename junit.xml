<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="185" failures="0" errors="0" time="228.757">
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:09" time="12.154" tests="6">
    <testcase classname=" connects to bitcoind" name=" connects to bitcoind" time="0.015">
    </testcase>
    <testcase classname="connects to lnds connects to lnd1" name="connects to lnds connects to lnd1" time="0.014">
    </testcase>
    <testcase classname="connects to lnds connects to lnd2" name="connects to lnds connects to lnd2" time="0.015">
    </testcase>
    <testcase classname="connects to lnds connects to outside lnds" name="connects to lnds connects to outside lnds" time="0.026">
    </testcase>
    <testcase classname=" connects to mongodb" name=" connects to mongodb" time="0.021">
    </testcase>
    <testcase classname=" connects to redis" name=" connects to redis" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Bitcoind" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:21" time="5.983" tests="5">
    <testcase classname="Bitcoind check no wallet" name="Bitcoind check no wallet" time="0.008">
    </testcase>
    <testcase classname="Bitcoind create outside wallet" name="Bitcoind create outside wallet" time="0.583">
    </testcase>
    <testcase classname="Bitcoind should be funded mining 10 blocks" name="Bitcoind should be funded mining 10 blocks" time="0.106">
    </testcase>
    <testcase classname="Bitcoind funds outside lnd node" name="Bitcoind funds outside lnd node" time="2.839">
    </testcase>
    <testcase classname="Bitcoind funds lnd1 node" name="Bitcoind funds lnd1 node" time="0.829">
    </testcase>
  </testsuite>
  <testsuite name="Lightning channels" errors="0" failures="0" skipped="2" timestamp="2022-01-13T05:54:27" time="7.457" tests="6">
    <testcase classname="Lightning channels opens channel from lnd1 to lnd2" name="Lightning channels opens channel from lnd1 to lnd2" time="1.586">
    </testcase>
    <testcase classname="Lightning channels opens channel from lnd1 to lndOutside1" name="Lightning channels opens channel from lnd1 to lndOutside1" time="1.585">
    </testcase>
    <testcase classname="Lightning channels opens channel from lndOutside1 to lnd1" name="Lightning channels opens channel from lndOutside1 to lnd1" time="1.474">
    </testcase>
    <testcase classname="Lightning channels opens channel from lnd1 to lndOutside2" name="Lightning channels opens channel from lnd1 to lndOutside2" time="1.548">
    </testcase>
    <testcase classname="Lightning channels opens private channel from lndOutside1 to lndOutside2" name="Lightning channels opens private channel from lndOutside1 to lndOutside2" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Lightning channels opensAndCloses channel from lnd1 to lndOutside1" name="Lightning channels opensAndCloses channel from lnd1 to lndOutside1" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Price history" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:34" time="3.128" tests="1">
    <testcase classname="Price history generates 1 year of data" name="Price history generates 1 year of data" time="1.775">
    </testcase>
  </testsuite>
  <testsuite name="UserWallet" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:38" time="1.191" tests="17">
    <testcase classname="UserWallet has a role if it was configured" name="UserWallet has a role if it was configured" time="0.004">
    </testcase>
    <testcase classname="UserWallet has a title if it was configured" name="UserWallet has a title if it was configured" time="0">
    </testcase>
    <testcase classname="UserWallet setUsername does not set username if length is less than 3" name="UserWallet setUsername does not set username if length is less than 3" time="0">
    </testcase>
    <testcase classname="UserWallet setUsername does not set username if contains invalid characters" name="UserWallet setUsername does not set username if contains invalid characters" time="0.001">
    </testcase>
    <testcase classname="UserWallet setUsername does not allow non english characters" name="UserWallet setUsername does not allow non english characters" time="0">
    </testcase>
    <testcase classname="UserWallet setUsername does not set username starting with 1, 3, bc1, lnbc1" name="UserWallet setUsername does not set username starting with 1, 3, bc1, lnbc1" time="0">
    </testcase>
    <testcase classname="UserWallet setUsername allows set username" name="UserWallet setUsername allows set username" time="0.024">
    </testcase>
    <testcase classname="UserWallet setUsername does not allow set username if already taken" name="UserWallet setUsername does not allow set username if already taken" time="0.007">
    </testcase>
    <testcase classname="UserWallet setUsername does not allow set username with only case difference" name="UserWallet setUsername does not allow set username with only case difference" time="0.014">
    </testcase>
    <testcase classname="UserWallet setUsername does not allow re-setting username" name="UserWallet setUsername does not allow re-setting username" time="0.002">
    </testcase>
    <testcase classname="UserWallet usernameExists return true if username already exists" name="UserWallet usernameExists return true if username already exists" time="0.004">
    </testcase>
    <testcase classname="UserWallet usernameExists return true for other capitalization" name="UserWallet usernameExists return true for other capitalization" time="0.003">
    </testcase>
    <testcase classname="UserWallet usernameExists return false if username does not exist" name="UserWallet usernameExists return false if username does not exist" time="0.003">
    </testcase>
    <testcase classname="UserWallet getStringCsv exports to csv" name="UserWallet getStringCsv exports to csv" time="0.006">
    </testcase>
    <testcase classname="UserWallet updateAccountStatus sets account status for given user id" name="UserWallet updateAccountStatus sets account status for given user id" time="0.026">
    </testcase>
    <testcase classname="UserWallet save2fa saves 2fa for user0" name="UserWallet save2fa saves 2fa for user0" time="0.018">
    </testcase>
    <testcase classname="UserWallet delete2fa delete 2fa for user0" name="UserWallet delete2fa delete 2fa for user0" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="UserWallet - addInvoice" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:39" time="1.856" tests="7">
    <testcase classname="UserWallet - addInvoice add a self generated invoice" name="UserWallet - addInvoice add a self generated invoice" time="0.043">
    </testcase>
    <testcase classname="UserWallet - addInvoice add a self generated invoice without amount" name="UserWallet - addInvoice add a self generated invoice without amount" time="0.018">
    </testcase>
    <testcase classname="UserWallet - addInvoice fails to add invoice past rate limit" name="UserWallet - addInvoice fails to add invoice past rate limit" time="0.121">
    </testcase>
    <testcase classname="UserWallet - addInvoice fails to add no amount invoice past rate limit" name="UserWallet - addInvoice fails to add no amount invoice past rate limit" time="0.1">
    </testcase>
    <testcase classname="UserWallet - addInvoice adds a public invoice" name="UserWallet - addInvoice adds a public invoice" time="0.013">
    </testcase>
    <testcase classname="UserWallet - addInvoice fails to add public invoice past rate limit" name="UserWallet - addInvoice fails to add public invoice past rate limit" time="0.093">
    </testcase>
    <testcase classname="UserWallet - addInvoice fails to add no amount public invoice past rate limit" name="UserWallet - addInvoice fails to add no amount public invoice past rate limit" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="getRecentlyActiveAccounts" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:41" time="0.95" tests="1">
    <testcase classname="getRecentlyActiveAccounts returns active users according to volume" name="getRecentlyActiveAccounts returns active users according to volume" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="UserWallet - Lightning" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:42" time="3.515" tests="3">
    <testcase classname="UserWallet - Lightning receives payment from outside" name="UserWallet - Lightning receives payment from outside" time="0.942">
    </testcase>
    <testcase classname="UserWallet - Lightning receives zero amount invoice" name="UserWallet - Lightning receives zero amount invoice" time="0.823">
    </testcase>
    <testcase classname="UserWallet - Lightning receives spam invoice" name="UserWallet - Lightning receives spam invoice" time="0.797">
    </testcase>
  </testsuite>
  <testsuite name="FunderWallet - On chain" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:45" time="11.699" tests="9">
    <testcase classname="FunderWallet - On chain receives on-chain transaction" name="FunderWallet - On chain receives on-chain transaction" time="0.595">
    </testcase>
    <testcase classname="UserWallet - On chain get last on chain address" name="UserWallet - On chain get last on chain address" time="0.259">
    </testcase>
    <testcase classname="UserWallet - On chain fails to create onChain Address past rate limit" name="UserWallet - On chain fails to create onChain Address past rate limit" time="0.295">
    </testcase>
    <testcase classname="UserWallet - On chain receives on-chain transaction" name="UserWallet - On chain receives on-chain transaction" time="0.573">
    </testcase>
    <testcase classname="UserWallet - On chain receives on-chain transaction with max limit for withdrawal level1" name="UserWallet - On chain receives on-chain transaction with max limit for withdrawal level1" time="0.635">
    </testcase>
    <testcase classname="UserWallet - On chain receives on-chain transaction with max limit for onUs level1" name="UserWallet - On chain receives on-chain transaction with max limit for onUs level1" time="0.706">
    </testcase>
    <testcase classname="UserWallet - On chain receives batch on-chain transaction" name="UserWallet - On chain receives batch on-chain transaction" time="0.748">
    </testcase>
    <testcase classname="UserWallet - On chain identifies unconfirmed incoming on-chain transactions" name="UserWallet - On chain identifies unconfirmed incoming on-chain transactions" time="5.417">
    </testcase>
    <testcase classname="UserWallet - On chain allows fee exemption for specific users" name="UserWallet - On chain allows fee exemption for specific users" time="0.75">
    </testcase>
  </testsuite>
  <testsuite name="UserWallet - addEarn" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:54:57" time="4.042" tests="2">
    <testcase classname="UserWallet - addEarn adds balance only once" name="UserWallet - addEarn adds balance only once" time="2.449">
    </testcase>
    <testcase classname="UserWallet - addEarn receives transaction with reward memo" name="UserWallet - addEarn receives transaction with reward memo" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="UserWallet - Lightning Pay" errors="0" failures="0" skipped="2" timestamp="2022-01-13T05:55:01" time="44.315" tests="32">
    <testcase classname="UserWallet - Lightning Pay sends to another Galoy user with memo" name="UserWallet - Lightning Pay sends to another Galoy user with memo" time="0.826">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay sends to another Galoy user with two different memos" name="UserWallet - Lightning Pay sends to another Galoy user with two different memos" time="0.683">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay sends to another Galoy user a push payment" name="UserWallet - Lightning Pay sends to another Galoy user a push payment" time="0.926">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay pay zero amount invoice" name="UserWallet - Lightning Pay pay zero amount invoice" time="0.92">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay filters spam from send to another Galoy user as push payment" name="UserWallet - Lightning Pay filters spam from send to another Galoy user as push payment" time="0.686">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay fails if sends to self" name="UserWallet - Lightning Pay fails if sends to self" time="0.682">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay fails if sends to self an on us push payment" name="UserWallet - Lightning Pay fails if sends to self an on us push payment" time="0.63">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay fails when user has insufficient balance" name="UserWallet - Lightning Pay fails when user has insufficient balance" time="0.627">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay fails to pay when channel capacity exceeded" name="UserWallet - Lightning Pay fails to pay when channel capacity exceeded" time="0.678">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay fails to pay zero amount invoice without separate amount" name="UserWallet - Lightning Pay fails to pay zero amount invoice without separate amount" time="0.574">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay fails to pay when withdrawalLimit exceeded" name="UserWallet - Lightning Pay fails to pay when withdrawalLimit exceeded" time="0.613">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay fails to pay when amount exceeds onUs limit" name="UserWallet - Lightning Pay fails to pay when amount exceeds onUs limit" time="0.605">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay getFeeAndPay pay invoice" name="UserWallet - Lightning Pay getFeeAndPay pay invoice" time="1.16">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay getFeeAndPay fails when repaying invoice" name="UserWallet - Lightning Pay getFeeAndPay fails when repaying invoice" time="1.494">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay getFeeAndPay pay invoice with High CLTV Delta" name="UserWallet - Lightning Pay getFeeAndPay pay invoice with High CLTV Delta" time="1.17">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay getFeeAndPay pay invoice to another Galoy user" name="UserWallet - Lightning Pay getFeeAndPay pay invoice to another Galoy user" time="2.667">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay getFeeAndPay pay invoice to lnd outside2" name="UserWallet - Lightning Pay getFeeAndPay pay invoice to lnd outside2" time="1.688">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay getFeeAndPay pay hodl invoice" name="UserWallet - Lightning Pay getFeeAndPay pay hodl invoice" time="4.184">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay getFeeAndPay don&apos;t settle hodl invoice" name="UserWallet - Lightning Pay getFeeAndPay don&apos;t settle hodl invoice" time="4.644">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay 2FA fails to pay above 2fa limit without 2fa token" name="UserWallet - Lightning Pay 2FA fails to pay above 2fa limit without 2fa token" time="0.721">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay 2FA Makes large payment with a 2fa code" name="UserWallet - Lightning Pay 2FA Makes large payment with a 2fa code" time="0.866">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay directPay pay invoice" name="UserWallet - Lightning Pay directPay pay invoice" time="0.872">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay directPay fails when repaying invoice" name="UserWallet - Lightning Pay directPay fails when repaying invoice" time="1.083">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay directPay pay invoice with High CLTV Delta" name="UserWallet - Lightning Pay directPay pay invoice with High CLTV Delta" time="0.888">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay directPay pay invoice to another Galoy user" name="UserWallet - Lightning Pay directPay pay invoice to another Galoy user" time="2.566">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay directPay pay invoice to lnd outside2" name="UserWallet - Lightning Pay directPay pay invoice to lnd outside2" time="1.039">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay directPay pay hodl invoice" name="UserWallet - Lightning Pay directPay pay hodl invoice" time="3.942">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay directPay don&apos;t settle hodl invoice" name="UserWallet - Lightning Pay directPay don&apos;t settle hodl invoice" time="4.51">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay 2FA fails to pay above 2fa limit without 2fa token" name="UserWallet - Lightning Pay 2FA fails to pay above 2fa limit without 2fa token" time="0.539">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay 2FA Makes large payment with a 2fa code" name="UserWallet - Lightning Pay 2FA Makes large payment with a 2fa code" time="0.705">
    </testcase>
    <testcase classname="UserWallet - Lightning Pay cancel the payment if the fee is too high" name="UserWallet - Lightning Pay cancel the payment if the fee is too high" time="0">
      <skipped/>
    </testcase>
    <testcase classname="UserWallet - Lightning Pay expired payment" name="UserWallet - Lightning Pay expired payment" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="UserWallet - onChainPay" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:55:45" time="15.022" tests="14">
    <testcase classname="UserWallet - onChainPay sends a successful payment" name="UserWallet - onChainPay sends a successful payment" time="2.107">
    </testcase>
    <testcase classname="UserWallet - onChainPay sends all in a successful payment" name="UserWallet - onChainPay sends all in a successful payment" time="2.054">
    </testcase>
    <testcase classname="UserWallet - onChainPay sends a successful payment with memo" name="UserWallet - onChainPay sends a successful payment with memo" time="1.654">
    </testcase>
    <testcase classname="UserWallet - onChainPay sends an on us transaction" name="UserWallet - onChainPay sends an on us transaction" time="0.657">
    </testcase>
    <testcase classname="UserWallet - onChainPay sends an on us transaction with memo" name="UserWallet - onChainPay sends an on us transaction with memo" time="0.488">
    </testcase>
    <testcase classname="UserWallet - onChainPay sends all with an on us transaction" name="UserWallet - onChainPay sends all with an on us transaction" time="0.486">
    </testcase>
    <testcase classname="UserWallet - onChainPay fails if try to send a transaction to self" name="UserWallet - onChainPay fails if try to send a transaction to self" time="0.388">
    </testcase>
    <testcase classname="UserWallet - onChainPay fails if an on us payment has insufficient balance" name="UserWallet - onChainPay fails if an on us payment has insufficient balance" time="0.941">
    </testcase>
    <testcase classname="UserWallet - onChainPay fails if has insufficient balance" name="UserWallet - onChainPay fails if has insufficient balance" time="1.133">
    </testcase>
    <testcase classname="UserWallet - onChainPay fails if has negative amount" name="UserWallet - onChainPay fails if has negative amount" time="0.376">
    </testcase>
    <testcase classname="UserWallet - onChainPay fails if withdrawal limit hit" name="UserWallet - onChainPay fails if withdrawal limit hit" time="0.891">
    </testcase>
    <testcase classname="UserWallet - onChainPay fails if the amount is less than on chain dust amount" name="UserWallet - onChainPay fails if the amount is less than on chain dust amount" time="0.4">
    </testcase>
    <testcase classname="UserWallet - onChainPay 2FA fails to pay above 2fa limit without 2fa token" name="UserWallet - onChainPay 2FA fails to pay above 2fa limit without 2fa token" time="0.376">
    </testcase>
    <testcase classname="UserWallet - onChainPay 2FA sends a successful large payment with a 2fa code" name="UserWallet - onChainPay 2FA sends a successful large payment with a 2fa code" time="0.88">
    </testcase>
  </testsuite>
  <testsuite name="UserWallet - getOnchainFee" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:00" time="1.704" tests="4">
    <testcase classname="UserWallet - getOnchainFee returns a fee greater than zero for an external address" name="UserWallet - getOnchainFee returns a fee greater than zero for an external address" time="0.09">
    </testcase>
    <testcase classname="UserWallet - getOnchainFee returns zero for an on us address" name="UserWallet - getOnchainFee returns zero for an on us address" time="0.026">
    </testcase>
    <testcase classname="UserWallet - getOnchainFee returns error for dust amount" name="UserWallet - getOnchainFee returns error for dust amount" time="0.012">
    </testcase>
    <testcase classname="UserWallet - getOnchainFee returns error for balance too low" name="UserWallet - getOnchainFee returns error for balance too low" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Users - updateLanguage" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:02" time="0.994" tests="2">
    <testcase classname="Users - updateLanguage updates successfully" name="Users - updateLanguage updates successfully" time="0.034">
    </testcase>
    <testcase classname="Users - updateLanguage fails with invalid language" name="Users - updateLanguage fails with invalid language" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Lock" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:03" time="28.278" tests="8">
    <testcase classname="Lock redlock return value is passed with a promise" name="Lock redlock return value is passed with a promise" time="0.005">
    </testcase>
    <testcase classname="Lock redlock use lock if this exist" name="Lock redlock use lock if this exist" time="0.002">
    </testcase>
    <testcase classname="Lock redlock relocking fail if lock is not passed down the tree" name="Lock redlock relocking fail if lock is not passed down the tree" time="2.026">
    </testcase>
    <testcase classname="Lock redlock second loop start after first loop has ended" name="Lock redlock second loop start after first loop has ended" time="2.28">
    </testcase>
    <testcase classname="Lock redlock throwing error releases the lock" name="Lock redlock throwing error releases the lock" time="0.508">
    </testcase>
    <testcase classname="Lock lockExtendOrThrow fail to extend after the lock timed out" name="Lock lockExtendOrThrow fail to extend after the lock timed out" time="11.01">
    </testcase>
    <testcase classname="Lock lockExtendOrThrow can extend before the lock timed out" name="Lock lockExtendOrThrow can extend before the lock timed out" time="0.106">
    </testcase>
    <testcase classname="Lock lockExtendOrThrow if lock has expired and another thread has take it, it should not extend" name="Lock lockExtendOrThrow if lock has expired and another thread has take it, it should not extend" time="12.007">
    </testcase>
  </testsuite>
  <testsuite name="SpecterWallet" errors="0" failures="0" skipped="1" timestamp="2022-01-13T05:56:31" time="2.518" tests="3">
    <testcase classname="SpecterWallet creates wallet" name="SpecterWallet creates wallet" time="0.581">
    </testcase>
    <testcase classname="SpecterWallet deposit to bitcoind" name="SpecterWallet deposit to bitcoind" time="0.303">
    </testcase>
    <testcase classname="SpecterWallet withdraw from bitcoind" name="SpecterWallet withdraw from bitcoind" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="GraphQLMutationRoot" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:34" time="1.761" tests="3">
    <testcase classname="GraphQLMutationRoot exposes accountUpdateLevel" name="GraphQLMutationRoot exposes accountUpdateLevel" time="0.1">
    </testcase>
    <testcase classname="GraphQLMutationRoot exposes accountUpdateStatus" name="GraphQLMutationRoot exposes accountUpdateStatus" time="0.02">
    </testcase>
    <testcase classname="GraphQLMutationRoot exposes businessUpdateMapInfo" name="GraphQLMutationRoot exposes businessUpdateMapInfo" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="GraphQLQueryRoot" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:35" time="0.858" tests="3">
    <testcase classname="GraphQLQueryRoot exposes allLevels" name="GraphQLQueryRoot exposes allLevels" time="0.005">
    </testcase>
    <testcase classname="GraphQLQueryRoot exposes accountDetails by phone" name="GraphQLQueryRoot exposes accountDetails by phone" time="0.027">
    </testcase>
    <testcase classname="GraphQLQueryRoot exposes accountDetails by username" name="GraphQLQueryRoot exposes accountDetails by username" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="notification" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:36" time="0.814" tests="1">
    <testcase classname="notification sendNotification sends daily balance to active users" name="notification sendNotification sends daily balance to active users" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="graphql" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:37" time="13.689" tests="15">
    <testcase classname="graphql main query returns valid data" name="graphql main query returns valid data" time="0.383">
    </testcase>
    <testcase classname="graphql lnNoAmountInvoiceCreate returns a valid lightning invoice" name="graphql lnNoAmountInvoiceCreate returns a valid lightning invoice" time="0.147">
    </testcase>
    <testcase classname="graphql lnNoAmountInvoiceCreate returns a valid lightning invoice if memo is not passed" name="graphql lnNoAmountInvoiceCreate returns a valid lightning invoice if memo is not passed" time="0.096">
    </testcase>
    <testcase classname="graphql lnInvoiceCreate returns a valid lightning invoice" name="graphql lnInvoiceCreate returns a valid lightning invoice" time="0.081">
    </testcase>
    <testcase classname="graphql lnInvoiceCreate returns a valid lightning invoice if memo is not passed" name="graphql lnInvoiceCreate returns a valid lightning invoice if memo is not passed" time="0.055">
    </testcase>
    <testcase classname="graphql lnInvoiceCreate returns an error if amount is negative" name="graphql lnInvoiceCreate returns an error if amount is negative" time="0.038">
    </testcase>
    <testcase classname="graphql lnInvoiceCreate returns an error if amount is zero" name="graphql lnInvoiceCreate returns an error if amount is zero" time="0.042">
    </testcase>
    <testcase classname="graphql lnInvoiceFeeProbe returns a valid fee" name="graphql lnInvoiceFeeProbe returns a valid fee" time="0.249">
    </testcase>
    <testcase classname="graphql lnInvoiceFeeProbe returns an error if it is unable to find a route for payment" name="graphql lnInvoiceFeeProbe returns an error if it is unable to find a route for payment" time="0.048">
    </testcase>
    <testcase classname="graphql lnNoAmountInvoiceFeeProbe returns a valid fee" name="graphql lnNoAmountInvoiceFeeProbe returns a valid fee" time="0.265">
    </testcase>
    <testcase classname="graphql lnNoAmountInvoiceFeeProbe returns an error if it is unable to find a route for payment" name="graphql lnNoAmountInvoiceFeeProbe returns an error if it is unable to find a route for payment" time="0.132">
    </testcase>
    <testcase classname="graphql lnInvoicePaymentSend sends a payment" name="graphql lnInvoicePaymentSend sends a payment" time="0.345">
    </testcase>
    <testcase classname="graphql lnInvoicePaymentSend returns error when sends a payment to self" name="graphql lnInvoicePaymentSend returns error when sends a payment to self" time="0.169">
    </testcase>
    <testcase classname="graphql lnNoAmountInvoicePaymentSend sends a payment" name="graphql lnNoAmountInvoicePaymentSend sends a payment" time="0.258">
    </testcase>
    <testcase classname="graphql lnNoAmountInvoicePaymentSend returns error when sends a payment to self" name="graphql lnNoAmountInvoicePaymentSend returns error when sends a payment to self" time="0.095">
    </testcase>
  </testsuite>
  <testsuite name="galoy-pay" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:56:51" time="37.586" tests="12">
    <testcase classname="galoy-pay getDefaultWalletId returns a value for an existing username" name="galoy-pay getDefaultWalletId returns a value for an existing username" time="0.052">
    </testcase>
    <testcase classname="galoy-pay getDefaultWalletId returns an error for invalid username syntax" name="galoy-pay getDefaultWalletId returns an error for invalid username syntax" time="0.032">
    </testcase>
    <testcase classname="galoy-pay getDefaultWalletId returns an error for an inexistant username" name="galoy-pay getDefaultWalletId returns an error for an inexistant username" time="0.035">
    </testcase>
    <testcase classname="galoy-pay nodeIds returns a nonempty list of nodes" name="galoy-pay nodeIds returns a nonempty list of nodes" time="0.032">
    </testcase>
    <testcase classname="galoy-pay lnInvoiceCreateOnBehalfOfRecipient creates an invoice with valid inputs" name="galoy-pay lnInvoiceCreateOnBehalfOfRecipient creates an invoice with valid inputs" time="0.07">
    </testcase>
    <testcase classname="galoy-pay lnInvoiceCreateOnBehalfOfRecipient fails to create an invoice for a nonexistent walletId" name="galoy-pay lnInvoiceCreateOnBehalfOfRecipient fails to create an invoice for a nonexistent walletId" time="0.03">
    </testcase>
    <testcase classname="galoy-pay lnInvoiceCreateOnBehalfOfRecipient returns an error with a negative amount" name="galoy-pay lnInvoiceCreateOnBehalfOfRecipient returns an error with a negative amount" time="0.071">
    </testcase>
    <testcase classname="galoy-pay lnInvoiceCreateOnBehalfOfRecipient returns an error with a zero amount" name="galoy-pay lnInvoiceCreateOnBehalfOfRecipient returns an error with a zero amount" time="0.082">
    </testcase>
    <testcase classname="galoy-pay price returns data with valid inputs" name="galoy-pay price returns data with valid inputs" time="26.921">
    </testcase>
    <testcase classname="galoy-pay lnInvoicePaymentStatus returns payment status when paid" name="galoy-pay lnInvoicePaymentStatus returns payment status when paid" time="0.19">
    </testcase>
    <testcase classname="galoy-pay lnNoAmountInvoiceCreateOnBehalfOfRecipient returns a valid lightning invoice" name="galoy-pay lnNoAmountInvoiceCreateOnBehalfOfRecipient returns a valid lightning invoice" time="0.049">
    </testcase>
    <testcase classname="galoy-pay lnNoAmountInvoiceCreateOnBehalfOfRecipient returns an error with an invalid walletId" name="galoy-pay lnNoAmountInvoiceCreateOnBehalfOfRecipient returns an error with an invalid walletId" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="graphql" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:28" time="11.231" tests="6">
    <testcase classname="graphql main query returns valid data" name="graphql main query returns valid data" time="0.05">
    </testcase>
    <testcase classname="graphql userRequestAuthCode success with a valid phone" name="graphql userRequestAuthCode success with a valid phone" time="0.023">
    </testcase>
    <testcase classname="graphql userRequestAuthCode returns error for invalid phone" name="graphql userRequestAuthCode returns error for invalid phone" time="0.021">
    </testcase>
    <testcase classname="graphql userLogin returns a jwt token for a valid phone/code" name="graphql userLogin returns a jwt token for a valid phone/code" time="0.886">
    </testcase>
    <testcase classname="graphql userLogin returns error for invalid phone" name="graphql userLogin returns error for invalid phone" time="0.045">
    </testcase>
    <testcase classname="graphql userLogin returns error for invalid code" name="graphql userLogin returns error for invalid code" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="graphql" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:40" time="5.591" tests="3">
    <testcase classname="graphql start server" name="graphql start server" time="0.054">
    </testcase>
    <testcase classname="graphql rate limit limiterRequestPhoneCode" name="graphql rate limit limiterRequestPhoneCode" time="0.032">
    </testcase>
    <testcase classname="graphql rate limit login" name="graphql rate limit login" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="onchainBlockEventhandler" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:45" time="2.373" tests="2">
    <testcase classname="onchainBlockEventhandler should process block for incoming transactions" name="onchainBlockEventhandler should process block for incoming transactions" time="0.96">
    </testcase>
    <testcase classname="onchainBlockEventhandler should process pending invoices on invoice update event" name="onchainBlockEventhandler should process pending invoices on invoice update event" time="0.206">
    </testcase>
  </testsuite>
  <testsuite name="lndHealth" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:48" time="0.67" tests="1">
    <testcase classname="lndHealth should emit on started" name="lndHealth should emit on started" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="&apos;lightning&apos; library error handling" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:48" time="2.049" tests="3">
    <testcase classname="&apos;lightning&apos; library error handling parses error message when no additional details are found" name="&apos;lightning&apos; library error handling parses error message when no additional details are found" time="0.001">
    </testcase>
    <testcase classname="&apos;lightning&apos; library error handling parses error message from err object" name="&apos;lightning&apos; library error handling parses error message from err object" time="0.18">
    </testcase>
    <testcase classname="&apos;lightning&apos; library error handling parses error message from failures object" name="&apos;lightning&apos; library error handling parses error message from failures object" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="lndUtils" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:50" time="3.956" tests="4">
    <testcase classname="lndUtils test cancelling invoice effect" name="lndUtils test cancelling invoice effect" time="0.03">
    </testcase>
    <testcase classname="lndUtils test expiring invoice effect" name="lndUtils test expiring invoice effect" time="2.524">
    </testcase>
    <testcase classname="lndUtils sets routing fee correctly" name="lndUtils sets routing fee correctly" time="0.357">
    </testcase>
    <testcase classname="lndUtils deletes expired InvoiceUser without throw an exception" name="lndUtils deletes expired InvoiceUser without throw an exception" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="AccountApiKeys" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:54" time="1.414" tests="4">
    <testcase classname="AccountApiKeys persists and finds an api key" name="AccountApiKeys persists and finds an api key" time="0.052">
    </testcase>
    <testcase classname="AccountApiKeys disable an api key by label" name="AccountApiKeys disable an api key by label" time="0.055">
    </testcase>
    <testcase classname="AccountApiKeys fails to find if expired api key" name="AccountApiKeys fails to find if expired api key" time="0.042">
    </testcase>
    <testcase classname="AccountApiKeys fails to list if account has not api keys" name="AccountApiKeys fails to list if account has not api keys" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="WalletInvoices" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:56" time="1.072" tests="4">
    <testcase classname="WalletInvoices persists and finds an invoice" name="WalletInvoices persists and finds an invoice" time="0.009">
    </testcase>
    <testcase classname="WalletInvoices updates an invoice" name="WalletInvoices updates an invoice" time="0.014">
    </testcase>
    <testcase classname="WalletInvoices deletes an invoice by hash" name="WalletInvoices deletes an invoice by hash" time="0.007">
    </testcase>
    <testcase classname="WalletInvoices find pending invoices by wallet id" name="WalletInvoices find pending invoices by wallet id" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="Price" errors="0" failures="0" skipped="0" timestamp="2022-01-13T05:57:57" time="0.726" tests="4">
    <testcase classname="Price listHistory returns 1d history with 3600000 interval" name="Price listHistory returns 1d history with 3600000 interval" time="0.074">
    </testcase>
    <testcase classname="Price listHistory returns 1w history with 14400000 interval" name="Price listHistory returns 1w history with 14400000 interval" time="0.069">
    </testcase>
    <testcase classname="Price listHistory returns 1m history with 86400000 interval" name="Price listHistory returns 1m history with 86400000 interval" time="0.074">
    </testcase>
    <testcase classname="Price listHistory returns 1y history with 604800000 interval" name="Price listHistory returns 1y history with 604800000 interval" time="0.146">
    </testcase>
  </testsuite>
</testsuites>