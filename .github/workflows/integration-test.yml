name: "Integration test"
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, labeled, unlabeled]

jobs:
  tests:
    name: execute via tilt
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 12288
          temp-reserve-mb: 12288
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare tilt args from labels
        id: prepare_args
        run: |
          ARGS=""
          BUILD_ARGS=""

          cat <<EOF > labels.json
          ${{ toJSON(github.event.pull_request.labels.*.name) }}
          EOF

          DEFAULT_LABELS=("dashboard" "consent" "pay" "core" "admin-panel" "map" "voucher")
          LABELS=($(jq -r '.[]' < labels.json))
          if [ ${#LABELS[@]} -eq 0 ]; then
              LABELS=("${DEFAULT_LABELS[@]}")
          elif [ ${#LABELS[@]} -eq 1 ] && [ "${LABELS[0]}" = "ci" ]; then
              LABELS=("${DEFAULT_LABELS[@]}")
          fi

          # Handle 'core' dependency
          for LABEL in "${LABELS[@]}"; do
            case "$LABEL" in
              core|dashboard|consent|pay|admin-panel|map|voucher)
                BUILD_ARGS+=" //core/api:prod_build"
                BUILD_ARGS+=" //core/notifications:notifications"

                break
                ;;
            esac
          done

          # Handle root 'node_modules' dependency
          for LABEL in "${LABELS[@]}"; do
            case "$LABEL" in
              dashboard|consent|pay|admin-panel|map|voucher)
                BUILD_ARGS+=" "//:node_modules""

                break
                ;;
            esac
          done

          # Handle 'consent' dependencies
          for LABEL in "${LABELS[@]}"; do
            case "$LABEL" in
              dashboard|voucher)
                BUILD_ARGS+=" //apps/consent:consent"
                BUILD_ARGS+=" //core/api-keys:api-keys"

                break
                ;;
            esac
          done

          # Handle other labels
          for LABEL in "${LABELS[@]}"; do
            case "$LABEL" in
              core)
                ARGS+=" $LABEL"
                ;;
            esac

            case "$LABEL" in
              dashboard|consent|admin-panel|map|voucher)
                ARGS+=" $LABEL"
                BUILD_ARGS+=" //apps/$LABEL:$LABEL"
                ;;

              pay)
                ARGS+=" $LABEL"
                BUILD_ARGS+=" //apps/$LABEL:$LABEL-ci"
                ;;
            esac
          done

          echo "Prepared args: $ARGS"
          echo "Prepared build_args: $BUILD_ARGS"
          echo "args=$ARGS" >> "$GITHUB_OUTPUT"
          echo "build_args=$BUILD_ARGS" >> "$GITHUB_OUTPUT"
      - name: Build via buck2
        if: steps.prepare_args.outputs.args != ''
        run: nix develop -c buck2 build ${{ steps.prepare_args.outputs.build_args }}
      - name: Start deps and run tests via tilt
        if: steps.prepare_args.outputs.args != ''
        run: nix develop -c xvfb-run ./dev/bin/tilt-ci.sh ${{ steps.prepare_args.outputs.args }}
      - name: Prepare Tilt log
        id: prepare_tilt_log
        if: always()
        run: |
          TILT_LOG="dev/.e2e-tilt.log"
          TARGET="dev/e2e-tilt.log"

          if [ -f "$TILT_LOG" ]; then
            mv "$TILT_LOG" "$TARGET"
            echo "prepared=true" >> "$GITHUB_OUTPUT"
          else
            echo "prepared=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Upload Tilt log
        if: steps.prepare_tilt_log.outputs.prepared == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: Tilt log
          path: dev/e2e-tilt.log
