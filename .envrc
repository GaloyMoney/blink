export NETWORK=regtest

export TLS=$(base64 dev/lnd/tls.cert | tr -d '\n\r')
export TLSOUTSIDE1=$(base64 dev/lnd/tls.cert | tr -d '\n\r')
export TLSOUTSIDE2=$(base64 dev/lnd/tls.cert | tr -d '\n\r')

fetch_macaroon() {
  local container_id=$(docker ps -q -f status=running -f name="galoy_$1_")
  if [ ! -z "${container_id}" ]; then
    # On Arch Linux `docker-compose up` appears to complete before the lnd containers have initialized the macaroons.
    # Here we retry for 10 seconds until we can copy the macroon successfully
    for i in {0..10}; do
      docker cp $container_id:/data/.lnd/data/chain/bitcoin/$NETWORK/admin.macaroon dev/lnd/$1.macaroon 2> /dev/null
      if [ "$?" = "0" ]; then
        base64 dev/lnd/$1.macaroon | tr -d '\n\r'
        break
      fi
      sleep 1
    done
  fi
}

export MACAROON=$(fetch_macaroon lnd1)
export MACAROONOUTSIDE1=$(fetch_macaroon lnd-outside-1)
export MACAROONOUTSIDE2=$(fetch_macaroon lnd-outside-2)

export BITCOINDPORT=18443
export BITCOINDADDR=127.0.0.1
export BITCOINDRPCPASS=rpcpassword

export LNDIP=127.0.0.1
export LNDRPCPORT=10009

export LNDOUTSIDE1ADDR=127.0.0.1
export LNDOUTSIDE1RPCPORT=10010

export LNDOUTSIDE2ADDR=127.0.0.1
export LNDOUTSIDE2RPCPORT=10011

export MONGODB_ADDRESS=127.0.0.1:27017
export MONGODB_PASSWORD=password

export REDIS_0_INTERNAL_IP=127.0.0.1
export REDIS_0_PORT=6379
export REDIS_0_DNS=127.0.0.1
export REDIS_0_SENTINEL_PORT=26379

export LOCAL=docker-compose
export JWT_SECRET="jwt_secret"
