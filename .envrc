export DOCKER_HOST_IP=${DOCKER_HOST_IP:-127.0.0.1}
export NETWORK=regtest

export LND1_TLS=$(cat dev/lnd/tls.cert.base64)
export LND2_TLS=$LND1_TLS

export TLSOUTSIDE1=$LND1_TLS
export TLSOUTSIDE2=$LND1_TLS

export LND1_MACAROON=$(cat dev/lnd/$NETWORK/lnd1.admin.macaroon.base64)
export LND2_MACAROON=$(cat dev/lnd/$NETWORK/lnd2.admin.macaroon.base64)

export MACAROONOUTSIDE1=$(cat dev/lnd/$NETWORK/lnd-outside-1.admin.macaroon.base64)
export MACAROONOUTSIDE2=$(cat dev/lnd/$NETWORK/lnd-outside-2.admin.macaroon.base64)


export LND1_LOOP_MACAROON=$(cat dev/lnd/loop/$NETWORK/loopd1-1.loop.macaroon.base64)
export LND2_LOOP_MACAROON=$(cat dev/lnd/loop/$NETWORK/loopd2-1.loop.macaroon.base64)
export LND1_LOOP_TLS=$(cat dev/lnd/loop/$NETWORK/loopd1-1.tls.cert.base64)
export LND2_LOOP_TLS=$(cat dev/lnd/loop/$NETWORK/loopd2-1.tls.cert.base64)

export LND1_PUBKEY=$(cat dev/lnd/$NETWORK/lnd1.pubkey)
export LND2_PUBKEY=$(cat dev/lnd/$NETWORK/lnd2.pubkey)

export BITCOINDPORT=18443
export BITCOINDADDR=${DOCKER_HOST_IP}
export BITCOIND_SIGNER_PORT=18543
export BITCOIND_SIGNER_ADDR=${DOCKER_HOST_IP}
export BITCOINDRPCPASS=rpcpassword

export LND1_DNS=${DOCKER_HOST_IP}
export LND2_DNS=${DOCKER_HOST_IP}
export LNDOUTSIDE1ADDR=${DOCKER_HOST_IP}
export LNDOUTSIDE2ADDR=${DOCKER_HOST_IP}

export LND1_RPCPORT=10009
export LND2_RPCPORT=10010

export LNDOUTSIDE1RPCPORT=10012
export LNDOUTSIDE2RPCPORT=10013

export LND1_TYPE=offchain,onchain
export LND2_TYPE=offchain

export LND1_NAME=lnd1
export LND2_NAME=lnd2

export MONGODB_CON=mongodb://${DOCKER_HOST_IP}:27017/galoy

export REDIS_0_DNS=${DOCKER_HOST_IP}
export REDIS_0_PORT=6379
export REDIS_MASTER_NAME="mymaster"
export REDIS_PASSWORD=""
export REDIS_TYPE="standalone"

export BRIA_HOST=${DOCKER_HOST_IP}
export BRIA_PORT=2742
export BRIA_API_KEY="bria_dev_000000000000000000000"

export PRICE_HOST=${DOCKER_HOST_IP}
export PRICE_PORT=50051

export PRICE_HISTORY_HOST=${DOCKER_HOST_IP}
export PRICE_HISTORY_PORT=50052

export OATHKEEPER_DECISION_ENDPOINT=http://${DOCKER_HOST_IP}:4456

export WEBSOCKET_PORT=4000

export GEETEST_ID="geetest_id"
export GEETEST_KEY="geetest_key"

export TWILIO_ACCOUNT_SID="AC_twilio_id"
export TWILIO_AUTH_TOKEN="AC_twilio_auth_token"
export TWILIO_VERIFY_SERVICE_ID="VA_twilio_service"

export COMMITHASH="hash"
export HELMREVISION="1"

export LOG_LEVEL="info"

export KRATOS_MASTER_USER_PASSWORD="passwordHardtoFindWithNumber123"
export KRATOS_ADMIN_URL="http://localhost:4434"
export KRATOS_CALLBACK_API_KEY="The-Value-of-My-Key"
export KRATOS_PG_HOST="localhost"
export KRATOS_PG_PORT="5433"

export OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4318"
# TODO: rename to OTEL_SERVICE_NAME 
# https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/#otel_service_name
export TRACING_SERVICE_NAME="galoy-dev"

export MATTERMOST_WEBHOOK_URL="https://chat.galoy.io/hooks/sometoken"

export KRATOS_PG_CON="postgres://dbuser:secret@localhost:5433/default?sslmode=disable"

export UNSECURE_DEFAULT_LOGIN_CODE="000000"
export UNSECURE_IP_FROM_REQUEST_OBJECT=true

export SVIX_SECRET="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2OTE2NzIwMTQsImV4cCI6MjAwNzAzMjAxNCwibmJmIjoxNjkxNjcyMDE0LCJpc3MiOiJzdml4LXNlcnZlciIsInN1YiI6Im9yZ18yM3JiOFlkR3FNVDBxSXpwZ0d3ZFhmSGlyTXUifQ.b9s0aWSisNdUNki4edabBEToLNSwjC9-AiJQr4J3y4E"
export SVIX_ENDPOINT="http://localhost:8071"
export SVIX_CALLBACK_URL=http://bats-tests:8080/webhook/

export KRATOS_PUBLIC_API="http://localhost:4433"
export KRATOS_ADMIN_API="http://localhost:4434"

# add your HONEYCOMB_API_KEY and HONEYCOMB_DATASET in .envrc.secrets to test HONEYCOMB
if [ -f .envrc.secrets ]; then
  source .envrc.secrets
fi
