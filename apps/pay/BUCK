load(
  "@toolchains//workspace-pnpm:macros.bzl",
  "dev_pnpm_task_binary",
  "dev_pnpm_task_test",
  "build_node_modules",
  "next_build",
  "next_build_bin",
  "eslint",
  "audit",
)

dev_pnpm_task_binary(
  name = "dev",
  command = "dev",
)

dev_pnpm_task_binary(
  name = "lint-fix",
  command = "lint:fix",
)

dev_pnpm_task_binary(
  name = "cypress-open",
  command = "cypress:open",
)

dev_pnpm_task_binary(
    name="codegen",
    command="codegen",
)

dev_pnpm_task_test(
  name = "test-integration",
  command = "cypress:run",
)

export_file(
  name = "package.json",
  visibility = ["PUBLIC"],
)

build_node_modules(
  name = "node_modules",
)

filegroup(
    name = "src",
    srcs = glob([
    "app/**",
    "context/**",
    "theme/**",
    "services/**",
    "components/**",
    "config/**",
    "hooks/**",
    "lib/**",
    "pages/**",
    "utils/**",
    "public/**",
    "public/.well-known/**",
    "next.config.js",
    "tsconfig.json",
    "*.ts", # env.ts / middleware.ts / instrumentation.ts
    "instrumentation.node.ts",
    "tailwind.config.ts",
    "postcss.config.js",
    ]),
)

next_build(
    name = "build",
    srcs = [":src"],
)

next_build_bin(
    name = "pay",
)

next_build(
    name = "build-ci",
    srcs = [":src"],
    build_env = {
        "CORE_GQL_URL_INTRANET": "http://localhost:4455/graphql",
        "NEXT_PUBLIC_CORE_GQL_URL": "http://localhost:4455/graphql",
        "NEXT_PUBLIC_CORE_GQL_WEB_SOCKET_URL": "ws://localhost:4455/graphqlws",
        "NEXT_PUBLIC_PAY_DOMAIN": "localhost:3002",
    }
)

next_build_bin(
    name = "pay-ci",
    next_build = ":build-ci",
)

dev_deps_srcs = {
    "lib/eslint-config": "//lib/eslint-config:src",
}

audit(
    name = "audit",
    level = "critical",
)

eslint(
    name = "lint",
    srcs = [":src"] + glob([".eslint*"]),
    extensions = [".ts", ".tsx"],
    allow_warnings = True,
    dev_deps_srcs = dev_deps_srcs,
)

test_suite(
    name = "test",
    tests = [
        ":audit",
        ":lint",
    ],
)
