{
  "openapi": "3.1.0",
  "info": {
    "title": "Sandbox hub",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api-sandbox.poweredbyibex.io"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/auth/refresh-access-token": {
      "post": {
        "summary": "Refresh Access Token",
        "description": "**Refresh an AccessToken using a RefreshToken.**",
        "operationId": "refresh-access-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accessToken\": \"\",\n    \"expiresAt\": 1643819877\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": ""
                    },
                    "expiresAt": {
                      "type": "integer",
                      "example": 1643819877,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nbody = {\"refreshToken\":\"xxxx\"}\n\nresponse = requests.post(\"https://api-sandbox.poweredbyibex.io/auth/refresh-access-token\",\n                         headers={\"Content-Type\": \"application/json\"},\n                         json=body)\n\nprint(response.json())\n"
            },
            {
              "language": "javascript",
              "code": "const request = require('request');\n \nconst options = {\n  method: \"POST\",\n  url: 'https://api-sandbox.poweredbyibex.io/auth/refresh-access-token',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"refreshToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTUyMTk0NzksIklEIjoiNDc4MmEyMzAtMmRhOC00NTQxLWI5MjgtMThlMmE5MmY5YWYwIiwiVHlwZSI6InJlZnJlc2giLCJVc2VySUQiOiJiNDNlY2U1Yi1kZGIwLTRjMmYtYjNiYS00MjdlYzYwZWNmNTkiLCJQZXJtaXNzaW9ucyI6bnVsbCwiUG9vbCI6IklCRVhfSFVCIn0.JIHeU_wvSIq5-c-H0tJJmI71yUgJKuUWDP6gZQokKrLpoMYHsv8_HZcwqZNTz9heYdI6Hsj0ZKsY2ZEcxdqoPcfjuZ11_m0NVe7BBUrtVFW6ECAH-FWs3-12H3zrASeo0ij8cofY0GOLQPWqVZOlrvd7vQApbBPK625OxhL_GVwt_6mC4e4LHqN3GLk8dHuFgmAIJ80qEbIuV2PKaNUwQ3Yk1a8QR-WtlISpkcnaPCIvxA3iq9r5e-hPEmo3gL9f-24v1_qsx663SizayFbW9hUa_NScUWDZPZHnR2W2V1zg3qU6WNhcXNE-VtWOKJZguxvBYHXSwiQEoi8D785zdmuKZzwm1dKV_bXDGAx35nhbmtsCpO9z2X8tZlmRUzN_rHfm__OcZBW3to57AaVy3gSHpRLG7LsbEC7FL8aPb_-7jVQYpi-_tZH_F_i7JzTzIRR9YWMErCVqpyiEe6CJKCe_jzK_njJTBQloRih7iRXL3wwotdmeJACgR9QnxegrvhT_h-TL7LRXmROJX6i9GLv1Vgvzaw2hi7C1NAk_fDVHW_bK5IEC_aQZ9CvxH2rysaP0NBn-9ZeBklRTZapwYtwZCVPJHejNrKeKnuegDWcAQ4joP9l4XgGZEAcy4KRoWykAHNOjJGBUM2Kfe-sHgcM3ArVDIMM3vOvAskrcHSU\",\n  })\n};\n \nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    const info = JSON.parse(body);\n    let refreshedAccessToken = info.accessToken\n  }\n}\n\nrequest(options, callback);"
            }
          ],
          "samples-languages": [
            "python",
            "javascript"
          ]
        }
      }
    },
    "/auth/revoke-refresh-token": {
      "post": {
        "summary": "Revoke Refresh Token",
        "description": "**Revoke a RefreshToken and all the AccessToken created with the RefreshToken**",
        "operationId": "revoke-refresh-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nbody = {\"refreshToken\": \"XXX\"}\nresponse = requests.post(\"https://api-sandbox.poweredbyibex.io/auth/revoke-refresh-token\",\n                         headers={\"Content-Type\": \"application/json\"},\n                         json=body)\n\nprint(response.status_code)"
            }
          ],
          "samples-languages": [
            "python"
          ]
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "summary": "Change Password",
        "description": "**Change the password of your account.**",
        "operationId": "change-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "proposedPassword": {
                    "type": "string"
                  },
                  "previousPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nbody = {\"proposedPassword\": \"XXX\",        \n        \"previousPassword\": \"XXX\"}\n\nresponse = requests.post(\"https://api-sandbox.poweredbyibex.io/auth/change-password\",\n                         headers={\"Authorization\": \"XXX\"},  # Put the AccessToken here.\n              II           json=body)\n                         \nprint(response.status_code)\n"
            }
          ],
          "samples-languages": [
            "python"
          ]
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "**Send an email to the user to reset password.**\n\nThe email indicated in the body will receive a Temporary Password.\n\nThe temporary password is used by the /auth/confirm-forgot-password endpoint to set a New Password",
        "operationId": "forgot-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nbody = {\"email\": \"your@email.com\"}\n\nresponse = requests.post(\"https://api-sandbox.poweredbyibex.io/auth/forgot-password\",\n                         headers={\"Content-Type\": \"application/json\"},\n                         json=body)\n\nprint(response.status_code)"
            }
          ],
          "samples-languages": [
            "python"
          ]
        }
      }
    },
    "/auth/confirm-forgot-password": {
      "post": {
        "summary": "Confirm Forgot Password",
        "description": "**Change the user password using the Temporary Password.**",
        "operationId": "confirm-forgot-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "temporaryPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nbody = {\"email\": \"your@email.com\",\n        \"temporaryPassword\": \"yourtemppassword\",\n        \"newPassword\": \"Examplepass1!\"}\n\nresponse = requests.post(\"https://api-sandbox.poweredbyibex.io/auth/confirm-forgot-password\",\n                         headers={\"Content-Type\": \"application/json\"},\n                         json=body)\n\nprint(response.status_code)\nprint(response.json())\n"
            }
          ],
          "samples-languages": [
            "python"
          ]
        }
      }
    },
    "/account/create": {
      "post": {
        "summary": "Create Account",
        "description": "**Create an IBEXHub account with a name.**",
        "operationId": "create-account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "currencyId": {
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"\",\n    \"userId\": \"\",\n    \"name\": \"\",\n  \t\"currencyId\": 0\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": ""
                    },
                    "userId": {
                      "type": "string",
                      "example": ""
                    },
                    "name": {
                      "type": "string",
                      "example": ""
                    },
                    "currencyId": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/all": {
      "get": {
        "summary": "All Accounts (deprecated)",
        "description": "**Get all IBEXHub accounts.**",
        "operationId": "get-all-the-accounts-of-the-user",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n    {\n        \"id\": \"\",\n        \"userId\": \"\",\n        \"name\": \"\",\n        \"currencyId\": 0\n    },\n]"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    // Response\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/account/{accountId}": {
      "get": {
        "summary": "Account Details",
        "description": "**Get information on one specific account and the balance of the account.**",
        "operationId": "get-account-details",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"\",\n    \"userId\": \"\",\n    \"name\": \"\",\n    \"balance\": 12.312341\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": ""
                    },
                    "userId": {
                      "type": "string",
                      "example": ""
                    },
                    "name": {
                      "type": "string",
                      "example": ""
                    },
                    "balance": {
                      "type": "number",
                      "example": 12.312341,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    // Response\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    // Response\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/{accountId}": {
      "put": {
        "summary": "Update Account",
        "description": "**Update an account with new fields.**",
        "operationId": "update-account",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"\",\n    \"userId\": \"\",\n    \"name\": \"\",\n    \"currencyId\": 1\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": ""
                    },
                    "userId": {
                      "type": "string",
                      "example": ""
                    },
                    "name": {
                      "type": "string",
                      "example": ""
                    },
                    "currencyId": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    // Response\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/invoice/add": {
      "post": {
        "summary": "Add Invoice V2",
        "description": "**Add invoice.**",
        "operationId": "add-invoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount of the invoice in the currency of the account. Can be 0 for amount less or need to be more than a sat.",
                    "format": "float"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "The account that will create the invoice. This account will be credited if someone pay the invoice."
                  },
                  "memo": {
                    "type": "string",
                    "description": "Maximum 50 chars."
                  },
                  "expiration": {
                    "type": "integer",
                    "description": "How long before the invoice expire in seconds.  Default and maximum: 15 mins.",
                    "default": 900,
                    "format": "int32"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "Webhook invocation when invoice is paid."
                  },
                  "webhookSecret": {
                    "type": "string",
                    "description": "A string used to validate the webhook comes from IBEXHub. Don't trust, verify."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"1e476673-0931-4eba-8373-37b368ce59f7\",\n    \"createdAt\": \"2022-11-10T14:53:16.64293Z\",\n    \"accountId\": \"a8bb0ac5-1e67-416e-8efb-9e45bb441be5\",\n    \"amount\": 14000,\n    \"networkFee\": 0,\n    \"exchangeRateCurrencySats\": 0.001,\n    \"currencyID\": 0,\n    \"transactionTypeId\": 1,\n    \"invoice\": {\n        \"hash\": \"8862fa7f4dcea0533952783bda143ff7fb7242a9573ac74f1ff944a601f02319\",\n        \"bolt11\": \"lnbc140n1p3k6yzupp53p305l6de6s9xw2j0qaa59pl7lahys4f2uavwncll9z2vq0syvvsdqqcqzpgxqzuysp5mdgsaa734eg7srwx92rsn3hyc4xzt5tphfpadl5c6fanhppwaz4s9qyyssqm6yhnnhl8jltwjtclzk4g7nxr99ycsp4sqd6vksevqh06h8l3gm5fdhtl59t6g3fsalv26sj5zvwhxwlghc9wcfgkrjrtuh4873ejnspc5xksy\",\n        \"preImage\": null,\n        \"memo\": \"\",\n        \"creationDateUtc\": \"2022-11-10T14:53:16.647651508Z\",\n        \"expiryDateUtc\": \"2022-11-10T15:08:16Z\",\n        \"settleDateUtc\": null,\n        \"amountMsat\": 14000,\n        \"receiveMsat\": 0,\n        \"stateId\": 0\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1e476673-0931-4eba-8373-37b368ce59f7"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-11-10T14:53:16.64293Z"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "a8bb0ac5-1e67-416e-8efb-9e45bb441be5"
                    },
                    "amount": {
                      "type": "integer",
                      "example": 14000,
                      "default": 0
                    },
                    "networkFee": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "exchangeRateCurrencySats": {
                      "type": "number",
                      "example": 0.001,
                      "default": 0
                    },
                    "currencyID": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "transactionTypeId": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "invoice": {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string",
                          "example": "8862fa7f4dcea0533952783bda143ff7fb7242a9573ac74f1ff944a601f02319"
                        },
                        "bolt11": {
                          "type": "string",
                          "example": "lnbc140n1p3k6yzupp53p305l6de6s9xw2j0qaa59pl7lahys4f2uavwncll9z2vq0syvvsdqqcqzpgxqzuysp5mdgsaa734eg7srwx92rsn3hyc4xzt5tphfpadl5c6fanhppwaz4s9qyyssqm6yhnnhl8jltwjtclzk4g7nxr99ycsp4sqd6vksevqh06h8l3gm5fdhtl59t6g3fsalv26sj5zvwhxwlghc9wcfgkrjrtuh4873ejnspc5xksy"
                        },
                        "preImage": {},
                        "memo": {
                          "type": "string",
                          "example": ""
                        },
                        "creationDateUtc": {
                          "type": "string",
                          "example": "2022-11-10T14:53:16.647651508Z"
                        },
                        "expiryDateUtc": {
                          "type": "string",
                          "example": "2022-11-10T15:08:16Z"
                        },
                        "settleDateUtc": {},
                        "amountMsat": {
                          "type": "integer",
                          "example": 14000,
                          "default": 0
                        },
                        "receiveMsat": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "stateId": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/pay": {
      "post": {
        "summary": "Pay Invoice (deprecated)",
        "description": "**Pay invoice.**",
        "operationId": "pay-invoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId",
                  "bolt11"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account that will pay the invoice.bolt11"
                  },
                  "bolt11": {
                    "type": "string"
                  },
                  "amountMSat": {
                    "type": "integer",
                    "description": "For amount-less invoices, the sender must specify the amount to send",
                    "format": "int32"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"settleDateUtc\": \"\",\n    \"hash\": \"\",\n    \"amountMsat\": \"\",\n    \"feesMsat\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "settleDateUtc": {
                      "type": "string",
                      "example": ""
                    },
                    "hash": {
                      "type": "string",
                      "example": ""
                    },
                    "amountMsat": {
                      "type": "string",
                      "example": ""
                    },
                    "feesMsat": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"balance\": 99930,\n  \"amountMsats\": 50000000,\n  \"estimatedFeeMsats\": 2100,\n  \"message\": \"Insufficient fundings\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "integer",
                      "example": 99930,
                      "default": 0
                    },
                    "amountMsats": {
                      "type": "integer",
                      "example": 50000000,
                      "default": 0
                    },
                    "estimatedFeeMsats": {
                      "type": "integer",
                      "example": 2100,
                      "default": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Insufficient fundings"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/invoice/estimate-fee": {
      "get": {
        "summary": "Fee estimation",
        "description": "**Estimate the fee using the bolt11.**",
        "operationId": "get-fee-estimation",
        "parameters": [
          {
            "name": "bolt11",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "currencyId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"amount\": 200\n  \t\"invoiceAmount\": 12\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/decode": {
      "get": {
        "summary": "Decoded Invoice",
        "description": "**Decode the information on the bolt11.**",
        "operationId": "decode-invoice",
        "parameters": [
          {
            "name": "bolt11",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"bitcoinNetwork\": \"regtest\",\n    \"amountMsat\": 1000,\n    \"timestamp\": 1654477398,\n    \"paymentHash\": \"f11736094c1eefd1755c545f5120f58c2fe8648015112a45510f8bff77e5023b\",\n    \"description\": \"TEST TRANSACTION\",\n    \"descriptionHash\": \"\",\n    \"minFinalCLTVExpiry\": 40,\n    \"expirationTime\": 900,\n    \"paymentSecret\": \"5462ba88157592aa0319679fbb9aa3701b991a1886995ad79c2a595adf99e567\",\n    \"routeHints\": null\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "bitcoinNetwork": {
                      "type": "string",
                      "example": "regtest"
                    },
                    "amountMsat": {
                      "type": "integer",
                      "example": 1000,
                      "default": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "example": 1654477398,
                      "default": 0
                    },
                    "paymentHash": {
                      "type": "string",
                      "example": "f11736094c1eefd1755c545f5120f58c2fe8648015112a45510f8bff77e5023b"
                    },
                    "description": {
                      "type": "string",
                      "example": "TEST TRANSACTION"
                    },
                    "descriptionHash": {
                      "type": "string",
                      "example": ""
                    },
                    "minFinalCLTVExpiry": {
                      "type": "integer",
                      "example": 40,
                      "default": 0
                    },
                    "expirationTime": {
                      "type": "integer",
                      "example": 900,
                      "default": 0
                    },
                    "paymentSecret": {
                      "type": "string",
                      "example": "5462ba88157592aa0319679fbb9aa3701b991a1886995ad79c2a595adf99e567"
                    },
                    "routeHints": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/pay": {
      "post": {
        "summary": "Create LNURL-pay",
        "description": "**Create a lnurl string**\n\nGenerate a reusable LNURL-pay string. The account tied to this LNURL is credited every time a payment is made to this static LNURL string",
        "operationId": "create-lnurl-pay",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account used for creating a LNURL-pay string."
                  },
                  "currencyId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "amount": {
                    "type": "number",
                    "description": "(Optional) Specify this field to create fix amount static QR.",
                    "format": "float"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "(Optional) Webhook invocation when a payment is made to this LNURL-pay  A /POST with the following body is made to webhookUrl {        hash: String,       receivedMsat: Int,       settledAtUtc: String }"
                  },
                  "webhookSecret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"lnurl\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "lnurl": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/lnurl/pay/send": {
      "post": {
        "summary": "Pay to a LNURL-pay",
        "description": "**Pay to a LNURL-pay string**\n\nTo use this endpoint, decode a LNURL-pay QR code and perform a /GET request on the decoded url to get the JSON response. Then, ask the user for an exact amount to send (if necessary). Then, call this api with the necessary parameters\n\n* The JSON response from /GET call should be used as the params field in the request body\n* amountMsat has to be within the bounds of maxSendable and minSendable",
        "operationId": "pay-to-a-lnurl-pay",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "params",
                  "amount",
                  "accountId"
                ],
                "properties": {
                  "params": {
                    "type": "string",
                    "description": "LNURL-pay base spec protocol fields: params : {     \"callback\" : String,     \"maxSendable\" : MilliSatoshi,     \"minSendable\" : MilliSatoshi,     \"metadata\" : String,     \"tag\" : \"payRequest\" }",
                    "format": "json"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The amount to pay to the LNURL-pay.",
                    "format": "int32"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "The account to debit when paying to a LNURL-pay."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"settleDateUtc\": 1668544241,\n    \"amountMsat\": 1000,\n    \"feesMsat\": 0,\n    \"hash\": \"19b7ff42e048d14791180d63592099b3394fc9ea7e3243906e810362124c29fd\",\n    \"transaction\": {\n        \"id\": \"dfeec8bd-b4e7-46f1-aa4a-cf4e4569df02\",\n        \"createdAt\": \"2022-11-15T20:30:41.960887Z\",\n        \"accountId\": \"eeba6152-9432-448e-b7d2-4205e5099924\",\n        \"amount\": 0.00325496699508991,\n        \"networkFee\": 0,\n        \"exchangeRateCurrencySats\": 307.53,\n        \"currencyId\": 5,\n        \"transactionTypeId\": 2,\n        \"payment\": {\n            \"bolt11\": \"\",\n            \"hash\": null,\n            \"preImage\": null,\n            \"memo\": null,\n            \"amountMsat\": 1000,\n            \"feeMsat\": 0,\n            \"paidMsat\": 0,\n            \"creationDateUtc\": \"0001-01-01T00:00:00Z\",\n            \"settleDateUtc\": null,\n            \"statusId\": 0,\n            \"failureId\": null\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "settleDateUtc": {
                      "type": "integer",
                      "example": 1668544241,
                      "default": 0
                    },
                    "amountMsat": {
                      "type": "integer",
                      "example": 1000,
                      "default": 0
                    },
                    "feesMsat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "hash": {
                      "type": "string",
                      "example": "19b7ff42e048d14791180d63592099b3394fc9ea7e3243906e810362124c29fd"
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "dfeec8bd-b4e7-46f1-aa4a-cf4e4569df02"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-11-15T20:30:41.960887Z"
                        },
                        "accountId": {
                          "type": "string",
                          "example": "eeba6152-9432-448e-b7d2-4205e5099924"
                        },
                        "amount": {
                          "type": "number",
                          "example": 0.00325496699508991,
                          "default": 0
                        },
                        "networkFee": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "exchangeRateCurrencySats": {
                          "type": "number",
                          "example": 307.53,
                          "default": 0
                        },
                        "currencyId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "transactionTypeId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "payment": {
                          "type": "object",
                          "properties": {
                            "bolt11": {
                              "type": "string",
                              "example": ""
                            },
                            "hash": {},
                            "preImage": {},
                            "memo": {},
                            "amountMsat": {
                              "type": "integer",
                              "example": 1000,
                              "default": 0
                            },
                            "feeMsat": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "paidMsat": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "creationDateUtc": {
                              "type": "string",
                              "example": "0001-01-01T00:00:00Z"
                            },
                            "settleDateUtc": {},
                            "statusId": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "failureId": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/withdraw": {
      "post": {
        "summary": "Create LNURL-withdraw",
        "description": "**Create a LNURL-withdraw string.**\n\nGenerate a single-use LNURL-withdraw string. The account tied to this LNURL is debited every time a successful withdrawal was initiated",
        "operationId": "create-lnurl-withdraw",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId",
                  "currencyId"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account used for creating a LNURL-withdraw string"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "Integer amount to withdraw. This amount is dependent on the currency specified",
                    "format": "int32"
                  },
                  "currencyId": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32"
                  },
                  "expirationMinutes": {
                    "type": "integer",
                    "description": "The amount of minutes before this LNURL-withdraw expires.",
                    "format": "int32"
                  },
                  "charges": {
                    "type": "integer",
                    "description": "Optional number of times the lnurlw can be withdrawn. By default the value is 1. Since this endpoints is for people to get funds from your account unlimited withdraws are not allowed.",
                    "default": 1,
                    "format": "int32"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "Webhook invocation when a withdrawal was initiated."
                  },
                  "webhookSecret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"lnurl\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "lnurl": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/withdraw/account/{account_id}": {
      "post": {
        "summary": "Withdraw from a LNURL-withdraw",
        "description": "**Withdraw from a LNURL-withdraw string.**\n\nTo use this endpoint, decode a LNURL-withdraw QR code and perform a /GET request on the decoded url to get the JSON response. Then, ask the user for an exact amount to withdraw (if necessary). Then, call this api with the necessary parameters\n\nThe bolt11 returned is for tracking purposes. As per the protocol, the bolt11 is supposed to be paid asynchronously; therefore caller of this api is responsible for tracking the payment status of the bolt11",
        "operationId": "withdraw-from-a-lnurl-withdraw",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "the account to credit the amount of the withdraw to.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amountMsat",
                  "k1",
                  "callback"
                ],
                "properties": {
                  "amountMsat": {
                    "type": "integer",
                    "description": "The amount to withdraw from a LNURL-withdraw.",
                    "format": "int32"
                  },
                  "k1": {
                    "type": "string",
                    "description": "The k1 is the unique identifier of the LnUrl Withdraw that you get when decoding the lnurl."
                  },
                  "callback": {
                    "type": "string",
                    "description": "The k1 is the url of the LnUrl Withdraw that you get when decoding the lnurl."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"14ce7b46-4058-4ec1-95ae-d318a465a510\",\n    \"createdAt\": \"2022-11-28T14:25:22.527218Z\",\n    \"accountId\": \"a8bb0ac5-1e67-416e-8efb-9e45bb441be5\",\n    \"amount\": 248000,\n    \"networkFee\": 0,\n    \"exchangeRateCurrencySats\": 0.001,\n    \"currencyId\": 0,\n    \"transactionTypeId\": 1,\n    \"invoice\": {\n        \"hash\": \"67486a2322849839140bf6e8bb8f0339df2b267f32781f66d1861e7cbc4a408d\",\n        \"bolt11\": \"lnbc2480n1p3cf3xjpp5vayx5gezsjvrj9qt7m5thrcr880jkfnlxfup7ek3sc08e0z2gzxsdqjf3hzq4mfw35xgunpwucqzpgxqzuysp5e9lky6na59wp5mtsc6084de6q20a9uhemcqvm8fnxyfx2ryg038s9qyyssqj5efhtxh8svvn2kqtppvprn7um2vd260zu9czl4vqzfrfcqpzrhxzphy37qndg3lj6sgceq5h6vcgc8fzwayjwqzf6agvxmw5eaxafqqcju9ye\",\n        \"preImage\": null,\n        \"memo\": \"Ln Withdraw\",\n        \"creationDateUtc\": \"2022-11-28T14:25:22.529495974Z\",\n        \"expiryDateUtc\": \"2022-11-28T14:40:22Z\",\n        \"settleDateUtc\": null,\n        \"amountMsat\": 248000,\n        \"receiveMsat\": 0,\n        \"stateId\": 0\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "14ce7b46-4058-4ec1-95ae-d318a465a510"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-11-28T14:25:22.527218Z"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "a8bb0ac5-1e67-416e-8efb-9e45bb441be5"
                    },
                    "amount": {
                      "type": "integer",
                      "example": 248000,
                      "default": 0
                    },
                    "networkFee": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "exchangeRateCurrencySats": {
                      "type": "number",
                      "example": 0.001,
                      "default": 0
                    },
                    "currencyId": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "transactionTypeId": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "invoice": {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string",
                          "example": "67486a2322849839140bf6e8bb8f0339df2b267f32781f66d1861e7cbc4a408d"
                        },
                        "bolt11": {
                          "type": "string",
                          "example": "lnbc2480n1p3cf3xjpp5vayx5gezsjvrj9qt7m5thrcr880jkfnlxfup7ek3sc08e0z2gzxsdqjf3hzq4mfw35xgunpwucqzpgxqzuysp5e9lky6na59wp5mtsc6084de6q20a9uhemcqvm8fnxyfx2ryg038s9qyyssqj5efhtxh8svvn2kqtppvprn7um2vd260zu9czl4vqzfrfcqpzrhxzphy37qndg3lj6sgceq5h6vcgc8fzwayjwqzf6agvxmw5eaxafqqcju9ye"
                        },
                        "preImage": {},
                        "memo": {
                          "type": "string",
                          "example": "Ln Withdraw"
                        },
                        "creationDateUtc": {
                          "type": "string",
                          "example": "2022-11-28T14:25:22.529495974Z"
                        },
                        "expiryDateUtc": {
                          "type": "string",
                          "example": "2022-11-28T14:40:22Z"
                        },
                        "settleDateUtc": {},
                        "amountMsat": {
                          "type": "integer",
                          "example": 248000,
                          "default": 0
                        },
                        "receiveMsat": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "stateId": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\nfrom lnurl import Lnurl, LnurlResponse, decode\n\ndecoded = decode(\"xxx\")  # Put the LNURL-withdraw here.\naccount_id = \"xxx\"\n\nr = requests.get(decoded.host + decoded.path + \"?\" + decoded.query)\nres = LnurlResponse.from_dict(r.json())\n\nprint(res)\n\nbody = {\n  \t\t\t\t\"callback\": res.callback,\n        \t\"k1\": res.k1,\n        \t\"amountMsat\": 999,  # The amount to withdraw from a LNURL-withdraw\n        }\n\nresponse = requests.post(\n  \"https://ibexhub.ibexmercado.com/lnurl/withdraw/account/\" + account_id,\n  headers={\"Authorization\": \"xxx\"},\n  json=body)\n\nprint(response.status_code)\nprint(response.json())\n"
            }
          ],
          "samples-languages": [
            "python"
          ]
        }
      }
    },
    "/lnurl/withdraw/{lnurl}": {
      "delete": {
        "summary": "Cancel a LNURL-withdraw",
        "description": "**Cancel a LNURL-withdraw string.**\n\nInvalidates an existing LNURL-withdraw string to prevent withdrawal.",
        "operationId": "cancel-a-lnurl-withdraw",
        "parameters": [
          {
            "name": "lnurl",
            "in": "path",
            "description": "LNURL-withdraw to invalidate",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "LNURL-Withdraw Status",
        "description": "",
        "operationId": "get-lnurl-withdraw-status",
        "parameters": [
          {
            "name": "lnurl",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"chargesRemaining\": 0,\n    \"amount\": 0,\n    \"currency\": \"\",\n    \"expirationTime\": 0,\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/currency/all": {
      "get": {
        "summary": "All Currencies",
        "description": "**Get all the currencies**",
        "operationId": "get-all",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"currencies\": [\n        {\n          \"id\": 0,\n          \"name\": \"MSAT\",\n          \"isFiat\": false,\n          \"symbol\": \"MSAT\",\n          \"accountEnabled\": true\n        },\n    ]\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/currency/rate/{fiat_id}": {
      "get": {
        "summary": "Rates (deprecated)",
        "description": "**Get the rate price of one bitcoin in the given fiat**",
        "operationId": "get-rates",
        "parameters": [
          {
            "name": "fiat_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"exchange\": \"SHIFT\",\n    \"amount\": 29001.66\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "exchange": {
                      "type": "string",
                      "example": "SHIFT"
                    },
                    "amount": {
                      "type": "number",
                      "example": 29001.66,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nresponse = requests.get(\"https://ibexhub.ibexmercado.com/currency/rate/3\",\n                        headers={\"Authorization\": \"XXX\"})  # Put the AccessToken here.\n\nprint(response.status_code)\nprint(response.json())\n"
            }
          ],
          "samples-languages": [
            "python"
          ]
        }
      }
    },
    "/lightning-address": {
      "post": {
        "summary": "Create a Lightning Address",
        "description": "**Create and associate a lightning address to an IBEX Hub account**\n\nThe IBEX Hub account tied to generated lightning address is credited every time a payment is made to lightning address.\n\nMultiple lightning addresses could be associated to an IBEX Hub account",
        "operationId": "create-a-lightning-address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId",
                  "username"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account to associate the lightning address to"
                  },
                  "username": {
                    "type": "string",
                    "description": "The username for the lightning address"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "Get notified when the address receives funds"
                  },
                  "webhookSecret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"\",\n    \"username\": \"kanye.west@ibexhub.ibexmercado.com\",\n    \"accountId\": \"fd\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": ""
                    },
                    "username": {
                      "type": "string",
                      "example": "kanye.west@ibexhub.ibexmercado.com"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "fd"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lightning-address/all?account-id={account-id}": {
      "get": {
        "summary": "All Lightning Addresses",
        "description": "**Get all Lightning Adresses associated to an account**",
        "operationId": "get-all-lightning-adresses",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n  {\n      \"id\": \"\",\n      \"username\": \"kanye.west@ibexhub.ibexmercado.com\",\n      \"accountId\": \"fd\"\n  }\n]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": ""
                      },
                      "username": {
                        "type": "string",
                        "example": "kanye.west@ibexhub.ibexmercado.com"
                      },
                      "accountId": {
                        "type": "string",
                        "example": "fd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lightning-address/{address-id}": {
      "put": {
        "summary": "Update Lightning Address",
        "description": "**Update the username of a lightning adress**",
        "operationId": "update-lightning-address",
        "parameters": [
          {
            "name": "address-id",
            "in": "path",
            "description": "ID of the ln-address",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "New username to save"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"\",\n    \"username\": \"kanye.west@ibexhub.ibexmercado.com\",\n    \"accountId\": \"fd\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": ""
                    },
                    "username": {
                      "type": "string",
                      "example": "kanye.west@ibexhub.ibexmercado.com"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "fd"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Lightning Address",
        "description": "**Delete lightning address associated to an IBEX Hub account**",
        "operationId": "delete-lightning-address",
        "parameters": [
          {
            "name": "address-id",
            "in": "path",
            "description": "ln-address UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/onchain/address": {
      "post": {
        "summary": "Generate Bitcoin Address",
        "description": "**Generate onchain address for an IBEXHub account.**\n\nGenerate bitcoin onchain address for an IBEXHub account. Each call generates a new address.\n\nFunds will only show up after a transaction's status is.",
        "operationId": "generate-bitcoin-address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account to credit when funds are sent to the associated onchain address."
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "(Optional) Webhook invocation when address received funds.  A /POST with the following body is made to webhookUrl {        transactionId: String,       amountSat: Int,       status: String,       networkTransactionId: String,       blockConfirmations: Int,       webhookSecret: String, }  /POST requests are made to the webhook url endpoint whenever the transaction status changes.  Transaction statuses: 1. INITIATED            2. MEMPOOL       // broadcasted to mempool 3. BLOCKCHAIN  // 1 confirmation on blockchain 4. CONFIRMED    // 2 confirmations on blockchain 5. FAILED"
                  },
                  "webhookSecret": {
                    "type": "string",
                    "description": "(Optional) Ensures that webhook request is from IBEXHub"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"address\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "javascript",
              "code": "// In progress."
            },
            {
              "language": "python",
              "code": "// In progress."
            }
          ],
          "samples-languages": [
            "javascript",
            "python"
          ]
        }
      }
    },
    "/onchain/send": {
      "post": {
        "summary": "Send to Address (deprecated)",
        "description": "Send bitcoin to a bitcoin address.",
        "operationId": "send-to-address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId",
                  "address",
                  "amountSat",
                  "feeSat"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account to debit when sending funds to an onchain address"
                  },
                  "address": {
                    "type": "string",
                    "description": "Destination Bitcoin address. Has to be a valid bitcoin address"
                  },
                  "amountSat": {
                    "type": "integer",
                    "description": "Exact amount(in sats) to send to the destination address",
                    "format": "int32"
                  },
                  "feeSat": {
                    "type": "integer",
                    "description": "Exact fee amount(in sats) to use for this transaction",
                    "format": "int32"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "(Optional) Webhook invocation when address received funds  A /POST with the following body is made to webhookUrl {        transactionId: String,       amountSat: Int,       status: String,       networkTransactionId: String,       blockConfirmations: Int,       webhookSecret: String, }  /POST requests are made to the webhook url endpoint whenever the transaction status changes.  Transaction statuses: 1. INITIATED            2. MEMPOOL       // broadcasted to mempool 3. BLOCKCHAIN  // 1 confirmation on blockchain 4. CONFIRMED    // 2 confirmations on blockchain 5. FAILED"
                  },
                  "webhookSecret": {
                    "type": "string",
                    "description": "(Optional) Ensures that webhook request is from IBEXHub"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transactionId\": \"\",\n    \"amountSat\": 0,\n    \"feeSat\": 0,\n    \"status\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "example": ""
                    },
                    "amountSat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "feeSat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"error: \"\"\n}"
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n \"error\": \"You are not the owner of the account\" \n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "You are not the owner of the account"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/onchain/estimate-fee?dest_address=&amount_sat=": {
      "get": {
        "summary": "Estimate Fee (deprecated)",
        "description": "Estimate fee required to send sats to onchain address",
        "operationId": "estimate-fee",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "destination bitcoin address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "amount being sent to destination address",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"feeSat\": 0\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "feeSat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "Sign Up",
        "description": "**SignUp with your temporary password and set your own.**",
        "operationId": "sign-up",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "temporaryPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "temporaryPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "Min size: 8, 1 uppercase, 1 lowercase , 1 number and 1 symbol."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accessToken\": \"\",\n    \"accessTokenExpiresAt\": 1643819877,\n    \"refreshToken\": \"\",\n    \"refreshTokenExpiresAt\": 1644421077\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": ""
                    },
                    "accessTokenExpiresAt": {
                      "type": "integer",
                      "example": 1643819877,
                      "default": 0
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": ""
                    },
                    "refreshTokenExpiresAt": {
                      "type": "integer",
                      "example": 1644421077,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\" : \"\", // error message\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nbody = {\"temporaryPassword\": \"yourtemppasswordfromsignupemail\",\n        \"email\": \"your@email.com\",\n        \"newPassword\": \"Examplepass1!\"}  # min 8 characters, 1 capital, 1 number, 1 special\n\nresponse = requests.post(\"https://api-sandbox.poweredbyibex.io/auth/signup\",\n                         headers={\"Content-Type\": \"application/json\"},\n                         json=body)\n\nprint(response.json())"
            },
            {
              "language": "javascript",
              "code": "const request = require('request');\n \nconst options = {\n  method: \"POST\",\n  url: 'https://api-sandbox.poweredbyibex.io/auth/signup',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    temporaryPassword: \"yourtemppasswordfromsignupemail\",\n    email: \"your@email.com\",\n    newPassword: \"Examplepass1!\" //min 8 characters, 1 capital, 1 number, 1 special\n  })\n};\n \nfunction handleResponse(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    const info = JSON.parse(body);\n    console.log(info)\n  }\n}\n\nrequest(options, handleResponse);"
            }
          ],
          "samples-languages": [
            "python",
            "javascript"
          ]
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Sign In",
        "description": "**Sign in to receive Access/Refresh tokens.**",
        "operationId": "sign-in",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accessToken\": \"\",\n    \"accessTokenExpiresAt\": 1643819877,\n    \"refreshToken\": \"\",\n    \"refreshTokenExpiresAt\": 1644421077\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": ""
                    },
                    "accessTokenExpiresAt": {
                      "type": "integer",
                      "example": 1643819877,
                      "default": 0
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": ""
                    },
                    "refreshTokenExpiresAt": {
                      "type": "integer",
                      "example": 1644421077,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\" : \"\", // error message\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "import requests\n\nbody = {\"email\": \"your@email.com\",\n        \"password\": \"Examplepass1!.\"}\n\nresponse = requests.post(\"https://api-sandbox.poweredbyibex.io/auth/signin\",\n                         headers={\"Content-Type\": \"application/json\"},\n                         json=body)\n\nprint(response.status_code)\nprint(response.json())\n"
            },
            {
              "language": "javascript",
              "code": "// In progress."
            }
          ],
          "samples-languages": [
            "python",
            "javascript"
          ]
        }
      }
    },
    "/lnurl/withdraw/all/{accountId}": {
      "get": {
        "summary": "All LNURL-withdraws",
        "description": "Get all of an accounts LNURL-withdraws",
        "operationId": "get-all-lnurl-withdraws",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": " [\n   { \n    \"chargesRemaining\": 0,\n    \"amount\": 0,\n    \"currency\": \"\",\n    \"expirationTime\": 0\n   }\n ]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "chargesRemaining": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      },
                      "amount": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      },
                      "currency": {
                        "type": "string",
                        "example": ""
                      },
                      "expirationTime": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/currencies/rate/{primary_currency_id}/{secondary_currency_id}": {
      "get": {
        "summary": "Rates V2",
        "description": "**Get the rate of fiat to fiat, fiat to bitcoin or sats to fiat**",
        "operationId": "get-rates-v2",
        "parameters": [
          {
            "name": "primary_currency_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            },
            "required": true
          },
          {
            "name": "secondary_currency_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"updatedAtUnix\": 124567654,\n\t\"rate\": 20000,\n\t\"PrimaryCurrencyID\": 2,\n\t\"secondaryCurrencyID\": 3\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "updatedAtUnix": {
                      "type": "integer",
                      "example": 124567654,
                      "default": 0
                    },
                    "rate": {
                      "type": "integer",
                      "example": 20000,
                      "default": 0
                    },
                    "PrimaryCurrencyID": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "secondaryCurrencyID": {
                      "type": "integer",
                      "example": 3,
                      "default": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/add": {
      "post": {
        "summary": "Add Invoice (deprecated)",
        "description": "**Add invoice.**",
        "operationId": "add-invoice-v1-depreciated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId"
                ],
                "properties": {
                  "amountMsat": {
                    "type": "integer",
                    "description": "Amount of the invoice in the currency of the account. Can be 0 for amount less or need to be more than a sat.",
                    "format": "int32"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "The account that will create the invoice. This account will be credited if someone pay the invoice."
                  },
                  "memo": {
                    "type": "string",
                    "description": "(Optional) Maximum 50 chars."
                  },
                  "expiration": {
                    "type": "integer",
                    "description": "(Optional) How long before the invoice expire in seconds.  Maximum: 15 mins.",
                    "default": 900,
                    "format": "int32"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "(Optional) Webhook invocation when invoice is paid  A /POST with the following body is made to webhookUrl {        hash: String,       receivedMsat: Int,       settledAtUtc: String,       webhookSecret: String  // omitted if empty }"
                  },
                  "webhookSecret": {
                    "type": "string",
                    "description": "(Optional) A string used to validate the webhook comes from IBEXHub. Don't trust, verify."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"bolt11\": \"\",\n    \"hash\": \"\",\n    \"expirationUtc\": 1646762947\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "bolt11": {
                      "type": "string",
                      "example": ""
                    },
                    "hash": {
                      "type": "string",
                      "example": ""
                    },
                    "expirationUtc": {
                      "type": "integer",
                      "example": 1646762947,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/payment/from-bolt11/{bolt11}": {
      "get": {
        "summary": "From Bolt11",
        "description": "**Get invoices information using the Bolt11.**",
        "operationId": "get-payment-infos-from-bolt11",
        "parameters": [
          {
            "name": "bolt11",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"bolt11\": \"\",\n    \"hash\": \"\",\n    \"preImage\": \"\",\n    \"memo\": \"\",\n    \"amountMsat\": 1,\n    \"feeMsat\": 0,\n    \"paidMsat\": 1,\n    \"creationDateUtc\": \"\",\n    \"settleDateUtc\": \"\",\n    \"statusId\": 1,\n    \"failureId\": 0,\n    \"failureReason\": {\n        \"id\": 0,\n        \"name\": \"\",\n        \"description\": \"\"\n    },\n    \"status\": {\n        \"id\": 1,\n        \"name\": \"\",\n        \"description\": \"\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "bolt11": {
                      "type": "string",
                      "example": ""
                    },
                    "hash": {
                      "type": "string",
                      "example": ""
                    },
                    "preImage": {
                      "type": "string",
                      "example": ""
                    },
                    "memo": {
                      "type": "string",
                      "example": ""
                    },
                    "amountMsat": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "feeMsat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "paidMsat": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "creationDateUtc": {
                      "type": "string",
                      "example": ""
                    },
                    "settleDateUtc": {
                      "type": "string",
                      "example": ""
                    },
                    "statusId": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "failureId": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "failureReason": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": ""
                        },
                        "description": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": ""
                        },
                        "description": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/invoice/pay": {
      "post": {
        "summary": "Pay Invoice V2",
        "description": "**Pay invoice.**",
        "operationId": "pay-invoice-v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId",
                  "bolt11"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account that will pay the invoice.bolt11"
                  },
                  "bolt11": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "description": "For amount-less invoices, the sender must specify the amount to send, in the currency of the account.",
                    "format": "float"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"settleAtUtc\": 0,\n    \"hash\": \"\",\n    \"status\": 1,\n    \"failureReason\": 0,\n    \"transaction\": {\n        \"id\": \"\",\n        \"createdAt\": \"2023-07-06T14:51:59.396027Z\",\n        \"settledAt\": null,\n        \"accountId\": \"37fe77d13\",\n        \"amount\": 654333,\n        \"networkFee\": 1240,\n        \"onChainSendFee\": 0,\n        \"exchangeRateCurrencySats\": 0.001,\n        \"currencyId\": 0,\n        \"transactionTypeId\": 2,\n        \"payment\": {\n            \"bolt11\": \"\",\n            \"hash\": \"\",\n            \"preImage\": null,\n            \"memo\": null,\n            \"amountMsat\": 654333,\n            \"feeMsat\": 0,\n            \"paidMsat\": 654333,\n            \"creationDateUtc\": \"2023-07-06T14:51:59.389565Z\",\n            \"settleDateUtc\": null,\n            \"statusId\": 1,\n            \"failureId\": 0,\n            \"status\": {\n                \"id\": 1,\n                \"name\": \"IN_FLIGHT\",\n                \"description\": null\n            }\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "settleAtUtc": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "hash": {
                      "type": "string",
                      "example": ""
                    },
                    "status": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "failureReason": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": ""
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-07-06T14:51:59.396027Z"
                        },
                        "settledAt": {},
                        "accountId": {
                          "type": "string",
                          "example": "37fe77d13"
                        },
                        "amount": {
                          "type": "integer",
                          "example": 654333,
                          "default": 0
                        },
                        "networkFee": {
                          "type": "integer",
                          "example": 1240,
                          "default": 0
                        },
                        "onChainSendFee": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "exchangeRateCurrencySats": {
                          "type": "number",
                          "example": 0.001,
                          "default": 0
                        },
                        "currencyId": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "transactionTypeId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "payment": {
                          "type": "object",
                          "properties": {
                            "bolt11": {
                              "type": "string",
                              "example": ""
                            },
                            "hash": {
                              "type": "string",
                              "example": ""
                            },
                            "preImage": {},
                            "memo": {},
                            "amountMsat": {
                              "type": "integer",
                              "example": 654333,
                              "default": 0
                            },
                            "feeMsat": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "paidMsat": {
                              "type": "integer",
                              "example": 654333,
                              "default": 0
                            },
                            "creationDateUtc": {
                              "type": "string",
                              "example": "2023-07-06T14:51:59.389565Z"
                            },
                            "settleDateUtc": {},
                            "statusId": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "failureId": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "status": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 1,
                                  "default": 0
                                },
                                "name": {
                                  "type": "string",
                                  "example": "IN_FLIGHT"
                                },
                                "description": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"balance\": 99930,\n  \"amountMsats\": 50000000,\n  \"estimatedFeeMsats\": 2100,\n  \"message\": \"Insufficient fundings\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "integer",
                      "example": 99930,
                      "default": 0
                    },
                    "amountMsats": {
                      "type": "integer",
                      "example": 50000000,
                      "default": 0
                    },
                    "estimatedFeeMsats": {
                      "type": "integer",
                      "example": 2100,
                      "default": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Insufficient fundings"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "504",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/transaction/{transaction_id}": {
      "get": {
        "summary": "Transaction Details",
        "description": "",
        "operationId": "get-transaction-details-1",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": \"a6ffa450-cf4e-4c00-957d-79ced2c7838e\",\n  \"createdAt\": \"2022-11-14T14:59:32.930083Z\",\n  \"accountId\": \"eeba6152-9432-448e-b7d2-4205e5099924\",\n  \"amount\": 0.1,\n  \"networkFee\": 0,\n  \"exchangeRateCurrencySats\": 309.5,\n  \"currencyID\": 5,\n  \"transactionTypeId\": 2,\n  \"account\": {\n    \"id\": \"eeba6152-9432-448e-b7d2-4205e5099924\",\n    \"userId\": \"5990d04b-4cb6-4f45-9c38-f76f0983b7b5\",\n    \"name\": \"doc test account MXN\",\n    \"currencyId\": 5\n  },\n  \"payment\": {\n    \"bolt11\": \"lnbc1p3hy4m5pp50u5hkkq2jdcrdzmghmuhsvm72fnxrmlzxm4c44d9uhrxtg4dw0dqdqu2askcmr9wssx7e3q2dshgmmndp5scqzpgxqyz5vqsp5w9wtx7nuslqhwk7u6fv6dtcg4w6vcm2420kaaf66078rcxw50z4s9qyyssq94tgypz5qe6546qu3d7qkrag6my70exg378ycgp72q03yjtfqrxpnccec390f6kszc2v47waur87f6654sk27vwa54qlrns2e94wq0qp3dchhe\",\n    \"hash\": \"7f297b580a9370368b68bef978337e526661efe236eb8ad5a5e5c665a2ad73da\",\n    \"preImage\": \"535eafc6231ce7d7d1eb58d0bb2f60d4bc1a5141248efc2c8e1c6920ab7e4513\",\n    \"memo\": null,\n    \"amountMsat\": 30950,\n    \"feeMsat\": 0,\n    \"paidMsat\": 30000,\n    \"creationDateUtc\": \"2022-11-14T14:59:33.214069Z\",\n    \"settleDateUtc\": \"2022-11-14T14:59:33.214069Z\",\n    \"statusId\": 2,\n    \"failureId\": 0,\n    \"status\": {\n      \"id\": 2,\n      \"name\": \"SUCCEEDED\",\n      \"description\": \"Payment completed successfully.\"\n    }\n  },\n  \"invoice\": {\n    \"hash\": \"402a1d7ac438cedeff9ce8e4cc29f117c2f8bfa21051ae999c316ddc5a5c7259\",\n    \"bolt11\": \"lnbc309500n1p3hy47qpp5gq4p67ky8r8daluuarjvc203zlp030azzpg6axvux9kackjuwfvsdpqv3hkxgr5v4ehggrpvd3k7atwwssy6kzwcqzpgxqzuysp5ayg90jyee4ev3euxsmqhjx8mcxvl7k59whh9vt26z6vhfsw60alq9qyyssq2uuznunpppwfg04z05hll2q083fjxm092gv0me99hckza224yjn8rqhs6zxscjkpsjumcxyaqlp2klfujxu2axf4vyhjn9lvqj6h8zsq8u9zmz\",\n    \"preImage\": \"03063ffa71106d4661373649bdf7d00d10228412d1c30e96fdbe58f563e8679b\",\n    \"memo\": \"doc test account MXN\",\n    \"creationDateUtc\": \"2022-11-14T14:59:12.747991Z\",\n    \"expiryDateUtc\": \"2022-11-14T15:14:12.747991Z\",\n    \"settleDateUtc\": \"2022-11-14T14:59:27.171102Z\",\n    \"amountMsat\": 30950000,\n    \"receiveMsat\": 30950000,\n    \"stateId\": 1,\n    \"state\": {\n      \"id\": 1,\n      \"name\": \"SETTLED\",\n      \"description\": \"Invoice is settled\"\n    }\n  },\n  \"onChainTransaction\": {\n    \"id\": \"73531bd1-f8a8-4024-b725-f3c1ec4ebb96\",\n    \"destAddress\": \"36dZ1y2zEraKsdPnxrSqCBwe5T3puPKUqK\",\n    \"feeSat\": 1720,\n    \"amountSat\": 5500,\n    \"statusId\": 4,\n    \"networkTxId\": \"b4bd36a3b4bbb7976f3969e8b5e0edf63293e6b08610dc9d3264a23f41934ca8\",\n    \"vout\": null,\n    \"blockheight\": 762317,\n    \"creationDateUtc\": \"2022-11-08T20:26:11.462165Z\",\n    \"wasDiscovered\": false,\n    \"status\": {\n      \"id\": 4,\n      \"value\": \"CONFIRMED\",\n      \"description\": \"The transaction had enough confirmations on the blockchain. For IBEX, we wait for 2 confirmations\"\n    },\n    \"metadata\": null\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "a6ffa450-cf4e-4c00-957d-79ced2c7838e"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-11-14T14:59:32.930083Z"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "eeba6152-9432-448e-b7d2-4205e5099924"
                    },
                    "amount": {
                      "type": "number",
                      "example": 0.1,
                      "default": 0
                    },
                    "networkFee": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "exchangeRateCurrencySats": {
                      "type": "number",
                      "example": 309.5,
                      "default": 0
                    },
                    "currencyID": {
                      "type": "integer",
                      "example": 5,
                      "default": 0
                    },
                    "transactionTypeId": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "account": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "eeba6152-9432-448e-b7d2-4205e5099924"
                        },
                        "userId": {
                          "type": "string",
                          "example": "5990d04b-4cb6-4f45-9c38-f76f0983b7b5"
                        },
                        "name": {
                          "type": "string",
                          "example": "doc test account MXN"
                        },
                        "currencyId": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        }
                      }
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "bolt11": {
                          "type": "string",
                          "example": "lnbc1p3hy4m5pp50u5hkkq2jdcrdzmghmuhsvm72fnxrmlzxm4c44d9uhrxtg4dw0dqdqu2askcmr9wssx7e3q2dshgmmndp5scqzpgxqyz5vqsp5w9wtx7nuslqhwk7u6fv6dtcg4w6vcm2420kaaf66078rcxw50z4s9qyyssq94tgypz5qe6546qu3d7qkrag6my70exg378ycgp72q03yjtfqrxpnccec390f6kszc2v47waur87f6654sk27vwa54qlrns2e94wq0qp3dchhe"
                        },
                        "hash": {
                          "type": "string",
                          "example": "7f297b580a9370368b68bef978337e526661efe236eb8ad5a5e5c665a2ad73da"
                        },
                        "preImage": {
                          "type": "string",
                          "example": "535eafc6231ce7d7d1eb58d0bb2f60d4bc1a5141248efc2c8e1c6920ab7e4513"
                        },
                        "memo": {},
                        "amountMsat": {
                          "type": "integer",
                          "example": 30950,
                          "default": 0
                        },
                        "feeMsat": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "paidMsat": {
                          "type": "integer",
                          "example": 30000,
                          "default": 0
                        },
                        "creationDateUtc": {
                          "type": "string",
                          "example": "2022-11-14T14:59:33.214069Z"
                        },
                        "settleDateUtc": {
                          "type": "string",
                          "example": "2022-11-14T14:59:33.214069Z"
                        },
                        "statusId": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "failureId": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "name": {
                              "type": "string",
                              "example": "SUCCEEDED"
                            },
                            "description": {
                              "type": "string",
                              "example": "Payment completed successfully."
                            }
                          }
                        }
                      }
                    },
                    "invoice": {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string",
                          "example": "402a1d7ac438cedeff9ce8e4cc29f117c2f8bfa21051ae999c316ddc5a5c7259"
                        },
                        "bolt11": {
                          "type": "string",
                          "example": "lnbc309500n1p3hy47qpp5gq4p67ky8r8daluuarjvc203zlp030azzpg6axvux9kackjuwfvsdpqv3hkxgr5v4ehggrpvd3k7atwwssy6kzwcqzpgxqzuysp5ayg90jyee4ev3euxsmqhjx8mcxvl7k59whh9vt26z6vhfsw60alq9qyyssq2uuznunpppwfg04z05hll2q083fjxm092gv0me99hckza224yjn8rqhs6zxscjkpsjumcxyaqlp2klfujxu2axf4vyhjn9lvqj6h8zsq8u9zmz"
                        },
                        "preImage": {
                          "type": "string",
                          "example": "03063ffa71106d4661373649bdf7d00d10228412d1c30e96fdbe58f563e8679b"
                        },
                        "memo": {
                          "type": "string",
                          "example": "doc test account MXN"
                        },
                        "creationDateUtc": {
                          "type": "string",
                          "example": "2022-11-14T14:59:12.747991Z"
                        },
                        "expiryDateUtc": {
                          "type": "string",
                          "example": "2022-11-14T15:14:12.747991Z"
                        },
                        "settleDateUtc": {
                          "type": "string",
                          "example": "2022-11-14T14:59:27.171102Z"
                        },
                        "amountMsat": {
                          "type": "integer",
                          "example": 30950000,
                          "default": 0
                        },
                        "receiveMsat": {
                          "type": "integer",
                          "example": 30950000,
                          "default": 0
                        },
                        "stateId": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "state": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "name": {
                              "type": "string",
                              "example": "SETTLED"
                            },
                            "description": {
                              "type": "string",
                              "example": "Invoice is settled"
                            }
                          }
                        }
                      }
                    },
                    "onChainTransaction": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "73531bd1-f8a8-4024-b725-f3c1ec4ebb96"
                        },
                        "destAddress": {
                          "type": "string",
                          "example": "36dZ1y2zEraKsdPnxrSqCBwe5T3puPKUqK"
                        },
                        "feeSat": {
                          "type": "integer",
                          "example": 1720,
                          "default": 0
                        },
                        "amountSat": {
                          "type": "integer",
                          "example": 5500,
                          "default": 0
                        },
                        "statusId": {
                          "type": "integer",
                          "example": 4,
                          "default": 0
                        },
                        "networkTxId": {
                          "type": "string",
                          "example": "b4bd36a3b4bbb7976f3969e8b5e0edf63293e6b08610dc9d3264a23f41934ca8"
                        },
                        "vout": {},
                        "blockheight": {
                          "type": "integer",
                          "example": 762317,
                          "default": 0
                        },
                        "creationDateUtc": {
                          "type": "string",
                          "example": "2022-11-08T20:26:11.462165Z"
                        },
                        "wasDiscovered": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 4,
                              "default": 0
                            },
                            "value": {
                              "type": "string",
                              "example": "CONFIRMED"
                            },
                            "description": {
                              "type": "string",
                              "example": "The transaction had enough confirmations on the blockchain. For IBEX, we wait for 2 confirmations"
                            }
                          }
                        },
                        "metadata": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/transaction/account/{account_id}/all": {
      "get": {
        "summary": "Account Transactions",
        "description": "",
        "operationId": "g",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "If limit is set to 0 all the transactions will be returned.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "default is newest settled transactions. -settledAt returns oldest settled first",
            "schema": {
              "type": "string",
              "default": "settledAt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n  {\n    \"id\": \"968e6d37-a690-41b5-a1e6-388ce0889e6d\",\n    \"createdAt\": \"2022-11-11T15:25:21.968123Z\",\n    \"accountId\": \"a8bb0ac5-1e67-416e-8efb-9e45bb441be5\",\n    \"amount\": 1000,\n    \"networkFee\": 0,\n    \"exchangeRateCurrencySats\": 0.001,\n    \"currencyId\": 0,\n    \"transactionTypeId\": 2\n  }\n]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "968e6d37-a690-41b5-a1e6-388ce0889e6d"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2022-11-11T15:25:21.968123Z"
                      },
                      "accountId": {
                        "type": "string",
                        "example": "a8bb0ac5-1e67-416e-8efb-9e45bb441be5"
                      },
                      "amount": {
                        "type": "integer",
                        "example": 1000,
                        "default": 0
                      },
                      "networkFee": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      },
                      "exchangeRateCurrencySats": {
                        "type": "number",
                        "example": 0.001,
                        "default": 0
                      },
                      "currencyId": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      },
                      "transactionTypeId": {
                        "type": "integer",
                        "example": 2,
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/from-hash/{invoice_hash}": {
      "get": {
        "summary": "Invoice From Hash",
        "description": "",
        "operationId": "invoice-from-hash",
        "parameters": [
          {
            "name": "invoice_hash",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"hash\": \"5c73109d6bba779244491f8a0ca9e34cc3d6f488fa1868c393693d4203a9e27e\",\n  \"bolt11\": \"lnbc6130200p1p3h8fkupp5t3e3p8tthfmey3zfr79qe20rfnpadayglgvx3sundy75yqafuflqdpqv3hkxgr5v4ehggrpvd3k7atwwssy6kzwcqzpgxqzuysp58z8l4208xvy4l95satgvlejlchrhal3qlfjvx9xqqjlec5dujuss9qyyssqck3wujx59yk7xpjqwfvejnrcy2n3jcypea7jwzy888jqrz97uvyxltzjayhv5s4uttt0cy0s66nen3yctxqqz8qc9tn5nn7sxzxk0xcqyl2ujd\",\n  \"preImage\": \"1383bda1df534a6b6001f9f5954ed332078598b518b05777da46bff9809d83db\",\n  \"memo\": \"doc test account MXN\",\n  \"creationDateUtc\": \"2022-11-15T14:49:00.151565Z\",\n  \"expiryDateUtc\": \"2022-11-15T15:04:00.151566Z\",\n  \"settleDateUtc\": null,\n  \"amountMsat\": 613020,\n  \"receiveMsat\": 0,\n  \"stateId\": 0,\n  \"state\": {\n    \"id\": 0,\n    \"name\": \"OPEN\",\n    \"description\": \"Invoice is waiting to be paid\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "5c73109d6bba779244491f8a0ca9e34cc3d6f488fa1868c393693d4203a9e27e"
                    },
                    "bolt11": {
                      "type": "string",
                      "example": "lnbc6130200p1p3h8fkupp5t3e3p8tthfmey3zfr79qe20rfnpadayglgvx3sundy75yqafuflqdpqv3hkxgr5v4ehggrpvd3k7atwwssy6kzwcqzpgxqzuysp58z8l4208xvy4l95satgvlejlchrhal3qlfjvx9xqqjlec5dujuss9qyyssqck3wujx59yk7xpjqwfvejnrcy2n3jcypea7jwzy888jqrz97uvyxltzjayhv5s4uttt0cy0s66nen3yctxqqz8qc9tn5nn7sxzxk0xcqyl2ujd"
                    },
                    "preImage": {
                      "type": "string",
                      "example": "1383bda1df534a6b6001f9f5954ed332078598b518b05777da46bff9809d83db"
                    },
                    "memo": {
                      "type": "string",
                      "example": "doc test account MXN"
                    },
                    "creationDateUtc": {
                      "type": "string",
                      "example": "2022-11-15T14:49:00.151565Z"
                    },
                    "expiryDateUtc": {
                      "type": "string",
                      "example": "2022-11-15T15:04:00.151566Z"
                    },
                    "settleDateUtc": {},
                    "amountMsat": {
                      "type": "integer",
                      "example": 613020,
                      "default": 0
                    },
                    "receiveMsat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "stateId": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "state": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": "OPEN"
                        },
                        "description": {
                          "type": "string",
                          "example": "Invoice is waiting to be paid"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/from-bolt11/{bolt11}": {
      "get": {
        "summary": "Invoice From bolt11",
        "description": "",
        "operationId": "invoice-from-bolt11",
        "parameters": [
          {
            "name": "bolt11",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"hash\": \"5c73109d6bba779244491f8a0ca9e34cc3d6f488fa1868c393693d4203a9e27e\",\n  \"bolt11\": \"lnbc6130200p1p3h8fkupp5t3e3p8tthfmey3zfr79qe20rfnpadayglgvx3sundy75yqafuflqdpqv3hkxgr5v4ehggrpvd3k7atwwssy6kzwcqzpgxqzuysp58z8l4208xvy4l95satgvlejlchrhal3qlfjvx9xqqjlec5dujuss9qyyssqck3wujx59yk7xpjqwfvejnrcy2n3jcypea7jwzy888jqrz97uvyxltzjayhv5s4uttt0cy0s66nen3yctxqqz8qc9tn5nn7sxzxk0xcqyl2ujd\",\n  \"preImage\": \"1383bda1df534a6b6001f9f5954ed332078598b518b05777da46bff9809d83db\",\n  \"memo\": \"doc test account MXN\",\n  \"creationDateUtc\": \"2022-11-15T14:49:00.151565Z\",\n  \"expiryDateUtc\": \"2022-11-15T15:04:00.151566Z\",\n  \"settleDateUtc\": null,\n  \"amountMsat\": 613020,\n  \"receiveMsat\": 0,\n  \"stateId\": 0,\n  \"state\": {\n    \"id\": 0,\n    \"name\": \"OPEN\",\n    \"description\": \"Invoice is waiting to be paid\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "5c73109d6bba779244491f8a0ca9e34cc3d6f488fa1868c393693d4203a9e27e"
                    },
                    "bolt11": {
                      "type": "string",
                      "example": "lnbc6130200p1p3h8fkupp5t3e3p8tthfmey3zfr79qe20rfnpadayglgvx3sundy75yqafuflqdpqv3hkxgr5v4ehggrpvd3k7atwwssy6kzwcqzpgxqzuysp58z8l4208xvy4l95satgvlejlchrhal3qlfjvx9xqqjlec5dujuss9qyyssqck3wujx59yk7xpjqwfvejnrcy2n3jcypea7jwzy888jqrz97uvyxltzjayhv5s4uttt0cy0s66nen3yctxqqz8qc9tn5nn7sxzxk0xcqyl2ujd"
                    },
                    "preImage": {
                      "type": "string",
                      "example": "1383bda1df534a6b6001f9f5954ed332078598b518b05777da46bff9809d83db"
                    },
                    "memo": {
                      "type": "string",
                      "example": "doc test account MXN"
                    },
                    "creationDateUtc": {
                      "type": "string",
                      "example": "2022-11-15T14:49:00.151565Z"
                    },
                    "expiryDateUtc": {
                      "type": "string",
                      "example": "2022-11-15T15:04:00.151566Z"
                    },
                    "settleDateUtc": {},
                    "amountMsat": {
                      "type": "integer",
                      "example": 613020,
                      "default": 0
                    },
                    "receiveMsat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "stateId": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "state": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": "OPEN"
                        },
                        "description": {
                          "type": "string",
                          "example": "Invoice is waiting to be paid"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/withdraw/invoice-requirements?k1={k1}": {
      "get": {
        "summary": "Invoice requirements",
        "description": "Decoded on the LNURL string",
        "operationId": "invoice-requirements",
        "parameters": [
          {
            "name": "k1",
            "in": "path",
            "description": "String to identify the client",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"tag\": \"withdrawRequest\",\n  \"callback\": \"string\",\n\t\"k1\": \"string\",\n\t\"defaultDescription\": \"string\",\n\t\"minWithdrawable\": 1,\n\t\"maxWithdrawable\": 1\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "type": "string",
                      "example": "withdrawRequest"
                    },
                    "callback": {
                      "type": "string",
                      "example": "string"
                    },
                    "k1": {
                      "type": "string",
                      "example": "string"
                    },
                    "defaultDescription": {
                      "type": "string",
                      "example": "string"
                    },
                    "minWithdrawable": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "maxWithdrawable": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"status\": \"ERROR\",\n    \"reason\": \"error details...\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ERROR"
                    },
                    "reason": {
                      "type": "string",
                      "example": "error details..."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/lnurl/withdraw/invoice?k1={k1}&pr={pr}": {
      "get": {
        "summary": "Pay invoice",
        "description": "Callback function that asynchronously pays the invoice",
        "operationId": "pay-invoice-1",
        "parameters": [
          {
            "name": "k1",
            "in": "path",
            "description": "String to identify the client, provided on invoice requirements",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "pr",
            "in": "path",
            "description": "the payment request (lightning invoice) generated by the client",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"status\": \"OK\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"status\": \"ERROR\", \"reason\": \"error details...\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ERROR"
                    },
                    "reason": {
                      "type": "string",
                      "example": "error details..."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/lnurl/pay/invoice-requirements?k1={k1}": {
      "get": {
        "summary": "Invoice requirements",
        "description": "Decoded on the LNURL string",
        "operationId": "invoice-requirements-1",
        "parameters": [
          {
            "name": "k1",
            "in": "path",
            "description": "String to identify the client",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"callback\": \"string\",\n\t\"maxSendable\": 1,\n\t\"minSendable\": 1,\n\t\"metadata\": \"string\",\n\t\"tag\": \"payRequest\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "callback": {
                      "type": "string",
                      "example": "string"
                    },
                    "maxSendable": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "minSendable": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "metadata": {
                      "type": "string",
                      "example": "string"
                    },
                    "tag": {
                      "type": "string",
                      "example": "payRequest"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"status\": \"ERROR\", \"reason\": \"error details...\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ERROR"
                    },
                    "reason": {
                      "type": "string",
                      "example": "error details..."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/lnurl/pay/invoice?amount={amount}&k1={k1}&comment={comment}": {
      "get": {
        "summary": "Bolt11",
        "description": "Generates an invoice from the k1 or ln-address.",
        "operationId": "pay-invoice-2",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "Amount to pay in milisatoshis",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "required": true
          },
          {
            "name": "k1",
            "in": "path",
            "description": "ID to identify the LNURL PAY recipient.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "comment",
            "in": "path",
            "description": "Optional note",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"pr\": \"string\",\n\t\"routes\": [\"string\"]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "pr": {
                      "type": "string",
                      "example": "string"
                    },
                    "routes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"status\":\"ERROR\", \"reason\":\"error details...\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ERROR"
                    },
                    "reason": {
                      "type": "string",
                      "example": "error details..."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/pay/{lnurl}": {
      "get": {
        "summary": "LNURL-pay status",
        "description": "Checks the current charges, currency, and amount of an LNURL-pay",
        "operationId": "get-lnurl-pay-status",
        "parameters": [
          {
            "name": "lnurl",
            "in": "path",
            "description": "LNURL-pay string to check",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"chargesRemaining\": 0,\n\t\"amount\": 0,\n\t\"currency\": \"\",\n\t\"expirationTime\": 0\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "chargesRemaining": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "amount": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "currency": {
                      "type": "string",
                      "example": ""
                    },
                    "expirationTime": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": " "
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/pay/all/{account}": {
      "get": {
        "summary": "All LNURL-pay",
        "description": "",
        "operationId": "get-all-lnurl-pay",
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "description": "Account associated with the LNURL-pay strings",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n   { \n    \"chargesRemaining\": 0,\n    \"amount\": 0,\n    \"currency\": \"\",\n    \"expirationTime\": 0\n   }\n ]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "chargesRemaining": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      },
                      "amount": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      },
                      "currency": {
                        "type": "string",
                        "example": ""
                      },
                      "expirationTime": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/payment/from-hash/{hash}": {
      "get": {
        "summary": "From hash",
        "description": "**Get payment information using the hash.**",
        "operationId": "get-payment-info-from-hash",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"bolt11\": \"\",\n    \"hash\": \"\",\n    \"preImage\": \"\",\n    \"memo\": \"\",\n    \"amountMsat\": 1,\n    \"feeMsat\": 0,\n    \"paidMsat\": 1,\n    \"creationDateUtc\": \"\",\n    \"settleDateUtc\": \"\",\n    \"statusId\": 1,\n    \"failureId\": 0,\n    \"failureReason\": {\n        \"id\": 0,\n        \"name\": \"\",\n        \"description\": \"\"\n    },\n    \"status\": {\n        \"id\": 1,\n        \"name\": \"\",\n        \"description\": \"\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "bolt11": {
                      "type": "string",
                      "example": ""
                    },
                    "hash": {
                      "type": "string",
                      "example": ""
                    },
                    "preImage": {
                      "type": "string",
                      "example": ""
                    },
                    "memo": {
                      "type": "string",
                      "example": ""
                    },
                    "amountMsat": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "feeMsat": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "paidMsat": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "creationDateUtc": {
                      "type": "string",
                      "example": ""
                    },
                    "settleDateUtc": {
                      "type": "string",
                      "example": ""
                    },
                    "statusId": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "failureId": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "failureReason": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": ""
                        },
                        "description": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": ""
                        },
                        "description": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoice/bolt11/{bolt11}": {
      "delete": {
        "summary": "Delete Invoice From bolt11",
        "description": "Cancel Invoices",
        "operationId": "invoice-from-bolt11-1",
        "parameters": [
          {
            "name": "bolt11",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/{account_id}/splits/destinations": {
      "get": {
        "summary": "Get Split Destinations",
        "description": "Get split destinations available to the account",
        "operationId": "get-split-destination",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n    {\n        \"id\": 1,\n        \"name\": \"IBEXHub Account\",\n        \"description\": \"Split to an IBEXHub account.\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Lightning Address\",\n        \"description\": \"Split to a Lightning Address.\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Onchain Address\",\n        \"description\": \"Split to an Onchain Address.\"\n    }\n]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1,
                        "default": 0
                      },
                      "name": {
                        "type": "string",
                        "example": "IBEXHub Account"
                      },
                      "description": {
                        "type": "string",
                        "example": "Split to an IBEXHub account."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/{account_id}/splits": {
      "get": {
        "summary": "Get all Splits",
        "description": "Returns an array containing all the splits configured for the account",
        "operationId": "get-all-splits",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n    {\n        \"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257703\",\n        \"percent\": 1,\n        \"destination\": \"bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99\",\n        \"destinationType\": {\n            \"id\": 3,\n            \"name\": \"Onchain Address\",\n            \"description\": \"Split to an Onchain Address.\"\n        }\n    },\n  \t{\n        \"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257704\",\n        \"percent\": 10,\n        \"destination\": \"test@ln-address.com\",\n        \"destinationType\": {\n            \"id\": 2,\n            \"name\": \"Lightning Address\",\n            \"description\": \"Split to a Lightning Address.\"\n        }\n    }\n]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "d76f8fc3-cc15-4ba6-b12e-b2704f257703"
                      },
                      "percent": {
                        "type": "integer",
                        "example": 1,
                        "default": 0
                      },
                      "destination": {
                        "type": "string",
                        "example": "bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99"
                      },
                      "destinationType": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 3,
                            "default": 0
                          },
                          "name": {
                            "type": "string",
                            "example": "Onchain Address"
                          },
                          "description": {
                            "type": "string",
                            "example": "Split to an Onchain Address."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update all Splits",
        "description": "Updates a list of existing splits for the account",
        "operationId": "get-all-splits-copy",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "RAW_BODY": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n    {\n        \"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257703\",\n        \"percent\": 1,\n        \"destination\": \"bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99\",\n        \"destinationType\": {\n            \"id\": 3,\n            \"name\": \"Onchain Address\",\n            \"description\": \"Split to an Onchain Address.\"\n        }\n    },\n  \t{\n        \"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257704\",\n        \"percent\": 10,\n        \"destination\": \"test@ln-address.com\",\n        \"destinationType\": {\n            \"id\": 2,\n            \"name\": \"Lightning Address\",\n            \"description\": \"Split to a Lightning Address.\"\n        }\n    }\n]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "d76f8fc3-cc15-4ba6-b12e-b2704f257703"
                      },
                      "percent": {
                        "type": "integer",
                        "example": 1,
                        "default": 0
                      },
                      "destination": {
                        "type": "string",
                        "example": "bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99"
                      },
                      "destinationType": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 3,
                            "default": 0
                          },
                          "name": {
                            "type": "string",
                            "example": "Onchain Address"
                          },
                          "description": {
                            "type": "string",
                            "example": "Split to an Onchain Address."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"total split percent exceeds 100%: 101\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "total split percent exceeds 100%: 101"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"not found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete all Splits",
        "description": "Delete all existing splits for the account",
        "operationId": "update-all-splits-copy-1",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create Splits",
        "description": "Creates or adds additional splits for the account",
        "operationId": "update-all-splits-copy-2",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "RAW_BODY": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n    {\n        \"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257703\",\n        \"percent\": 1,\n        \"destination\": \"bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99\",\n        \"destinationType\": {\n            \"id\": 3,\n            \"name\": \"Onchain Address\",\n            \"description\": \"Split to an Onchain Address.\"\n        }\n    },\n  \t{\n        \"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257704\",\n        \"percent\": 10,\n        \"destination\": \"test@ln-address.com\",\n        \"destinationType\": {\n            \"id\": 2,\n            \"name\": \"Lightning Address\",\n            \"description\": \"Split to a Lightning Address.\"\n        }\n    }\n]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "d76f8fc3-cc15-4ba6-b12e-b2704f257703"
                      },
                      "percent": {
                        "type": "integer",
                        "example": 1,
                        "default": 0
                      },
                      "destination": {
                        "type": "string",
                        "example": "bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99"
                      },
                      "destinationType": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 3,
                            "default": 0
                          },
                          "name": {
                            "type": "string",
                            "example": "Onchain Address"
                          },
                          "description": {
                            "type": "string",
                            "example": "Split to an Onchain Address."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"total split percent exceeds 100%: 101\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "total split percent exceeds 100%: 101"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"not found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/{account_id}/splits/{split_id}": {
      "get": {
        "summary": "Get a single Split",
        "description": "Returns the split requested with split ID",
        "operationId": "get-a-single-split",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "split_id",
            "in": "path",
            "description": "Payment Split UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257703\",\n    \"percent\": 1,\n    \"destination\": \"bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99\",\n    \"destinationType\": {\n        \"id\": 3,\n        \"name\": \"Onchain Address\",\n        \"description\": \"Split to an Onchain Address.\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "d76f8fc3-cc15-4ba6-b12e-b2704f257703"
                    },
                    "percent": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "destination": {
                      "type": "string",
                      "example": "bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99"
                    },
                    "destinationType": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 3,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": "Onchain Address"
                        },
                        "description": {
                          "type": "string",
                          "example": "Split to an Onchain Address."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"record not found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "record not found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update a single Split",
        "description": "Updates an existing split for the account",
        "operationId": "update-all-splits-copy",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "split_id",
            "in": "path",
            "description": "Payment Split UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "percent",
                  "destination"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Payment Split UUID"
                  },
                  "percent": {
                    "type": "integer",
                    "description": "Split percentage. 0 < n <= 100",
                    "format": "int32"
                  },
                  "destination": {
                    "type": "string",
                    "description": "One of the supported destination types. Provide either a \"Hub Account UUID\", `Lightning Address` or `Onchain Address`"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \t\"id\": \"d76f8fc3-cc15-4ba6-b12e-b2704f257703\",\n    \"percent\": 1,\n    \"destination\": \"bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99\",\n    \"destinationType\": {\n        \"id\": 3,\n        \"name\": \"Onchain Address\",\n        \"description\": \"Split to an Onchain Address.\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "d76f8fc3-cc15-4ba6-b12e-b2704f257703"
                    },
                    "percent": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "destination": {
                      "type": "string",
                      "example": "bc1qdfjs54pgl8eedjkvnpxalqekxzuft9phzzhe99"
                    },
                    "destinationType": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 3,
                          "default": 0
                        },
                        "name": {
                          "type": "string",
                          "example": "Onchain Address"
                        },
                        "description": {
                          "type": "string",
                          "example": "Split to an Onchain Address."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"total split percent exceeds 100%: 101\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "total split percent exceeds 100%: 101"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"error\": \"not found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a single Split",
        "description": "Delete an existing split for the account",
        "operationId": "update-a-single-split-copy",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Ibexhub Account UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "split_id",
            "in": "path",
            "description": "Payment Split UUID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"error\": \"not found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/account": {
      "get": {
        "summary": "All Accounts V2",
        "description": "**Get all IBEXHub accounts.**",
        "operationId": "get-all-accounts-copy",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Include the account balance in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Only include accounts that include the filter string in its name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination, number of page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of accounts to be included in response. Valid range is [10, 100]",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "[\n    {\n        \"id\": \"\",\n        \"userId\": \"\",\n        \"organizationId\": \"\",\n        \"name\": \"\",\n        \"currencyId\": 0,\n        \"balance\": 0\n    }\n]"
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": ""
                      },
                      "userId": {
                        "type": "string",
                        "example": ""
                      },
                      "organizationId": {
                        "type": "string",
                        "example": ""
                      },
                      "name": {
                        "type": "string",
                        "example": ""
                      },
                      "currencyId": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      },
                      "balance": {
                        "type": "integer",
                        "example": 0,
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"error\": \"\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "401",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/decode/{lnurl}": {
      "get": {
        "summary": "Decode LNURL",
        "description": "Decode an LNURL to get a request url",
        "operationId": "decode-lnurl",
        "parameters": [
          {
            "name": "lnurl",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"decodedLnurl\": \"https://ibexhub.ibexmercado.com/lnurl/withdraw/invoice-requirements?k1=624de254d284330fd29e253f078b7c7b9361b9ee4111cb772b6f41b1ffc019f1\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "decodedLnurl": {
                      "type": "string",
                      "example": "https://ibexhub.ibexmercado.com/lnurl/withdraw/invoice-requirements?k1=624de254d284330fd29e253f078b7c7b9361b9ee4111cb772b6f41b1ffc019f1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/onchain/send": {
      "post": {
        "summary": "Send to Address V2",
        "description": "Send sats to a bitcoin address.",
        "operationId": "send-to-address-copy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "accountId",
                  "address",
                  "amount"
                ],
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The account to debit when sending funds to an onchain address"
                  },
                  "address": {
                    "type": "string",
                    "description": "Destination Bitcoin address. Has to be a valid bitcoin address"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "Amount to send in the wallet's currency",
                    "format": "int32"
                  },
                  "webhookUrl": {
                    "type": "string",
                    "description": "(Optional) Webhook invocation when address received funds  A /POST with the following body is made to webhookUrl {        transactionId: String,       amountSat: Int,       status: String,       networkTransactionId: String,       blockConfirmations: Int,       webhookSecret: String, }  /POST requests are made to the webhook url endpoint whenever the transaction status changes.  Transaction statuses: 1. INITIATED            2. MEMPOOL       // broadcasted to mempool 3. BLOCKCHAIN  // 1 confirmation on blockchain 4. CONFIRMED    // 2 confirmations on blockchain 5. FAILED"
                  },
                  "webhookSecret": {
                    "type": "string",
                    "description": "(Optional) Ensures that webhook request is from IBEXHub"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transactionHub\": {\n        \"id\": \"\",\n        \"createdAt\": \"2023-08-04T08:33:31.869852Z\",\n        \"settledAt\": null,\n        \"accountId\": \"\",\n        \"amount\": 5600000,\n        \"networkFee\": 2870000,\n        \"onChainSendFee\": 0,\n        \"exchangeRateCurrencySats\": 0.001,\n        \"currencyId\": 0,\n        \"transactionTypeId\": 4\n    },\n    \"amountSat\": 5600,\n    \"feeSat\": 2870,\n    \"status\": \"INITIATED\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionHub": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": ""
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-08-04T08:33:31.869852Z"
                        },
                        "settledAt": {},
                        "accountId": {
                          "type": "string",
                          "example": ""
                        },
                        "amount": {
                          "type": "integer",
                          "example": 5600000,
                          "default": 0
                        },
                        "networkFee": {
                          "type": "integer",
                          "example": 2870000,
                          "default": 0
                        },
                        "onChainSendFee": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "exchangeRateCurrencySats": {
                          "type": "number",
                          "example": 0.001,
                          "default": 0
                        },
                        "currencyId": {
                          "type": "integer",
                          "example": 0,
                          "default": 0
                        },
                        "transactionTypeId": {
                          "type": "integer",
                          "example": 4,
                          "default": 0
                        }
                      }
                    },
                    "amountSat": {
                      "type": "integer",
                      "example": 5600,
                      "default": 0
                    },
                    "feeSat": {
                      "type": "integer",
                      "example": 2870,
                      "default": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "INITIATED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"error: \"\"\n}"
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n \"error\": \"You are not the owner of the account\" \n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "You are not the owner of the account"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/onchain/estimate-fee?dest_address=&amount_sat= (COPY)": {
      "get": {
        "summary": "Estimate Fee V2",
        "description": "Estimate fee required to send sats to onchain address",
        "operationId": "estimate-fee-copy",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "destination bitcoin address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "amount being sent to destination address",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currency-id",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"fee\": 0.00008557344064386318,\n    \"feeSat\": 8506\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "fee": {
                      "type": "number",
                      "example": 0.00008557344064386318,
                      "default": 0
                    },
                    "feeSat": {
                      "type": "integer",
                      "example": 8506,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/lnurl/pay/invoice?amount={amount}&ln-address={ln-address}&comment={comment} (COPY)": {
      "get": {
        "summary": "Bolt11",
        "description": "Generates an invoice from the ln-address.",
        "operationId": "fetch-invoice-copy",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "Amount to pay in milisatoshis",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "required": true
          },
          {
            "name": "ln-address",
            "in": "path",
            "description": "Address to identify the recipient.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "comment",
            "in": "path",
            "description": "Optional note",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"pr\": \"string\",\n\t\"routes\": [\"string\"]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "pr": {
                      "type": "string",
                      "example": "string"
                    },
                    "routes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"status\":\"ERROR\", \"reason\":\"error details...\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ERROR"
                    },
                    "reason": {
                      "type": "string",
                      "example": "error details..."
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": []
  },
  "x-readme-fauxas": true
}