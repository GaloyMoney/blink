apiVersion: vendir.k14s.io/v1alpha1
kind: Config

directories:
  - path: vendor
    contents:
      - path: dev
        git:
          url: https://github.com/GaloyMoney/galoy.git
          ref: main
        includePaths:
          - dev/**/*
        excludePaths:
          - dev/bin/**/*
        newRootPath: dev
      - path: graphql
        git:
          url: https://github.com/GaloyMoney/galoy.git
          ref: main
        includePaths:
          - src/graphql/main/schema.graphql
      - path: test
        git:
          url: https://github.com/GaloyMoney/galoy.git
          ref: main
        includePaths:
          - test/bats/helpers/**/*
          - test/bats/gql/**/*
        newRootPath: test
      - path: docker
        inline:
          paths:
            docker-compose.yml: |
              version: "3"
              services:
                bats-deps:
                  image: busybox
                  depends_on:
                    - apollo-router
                    - redis
                    - mongodb
                    - oathkeeper
                    - kratos
                    - price
                    - bitcoind
                    - lnd1
                    - lnd2
                    - lnd-outside-1
                galoy:
                  image: us.gcr.io/galoy-org/galoy-app:edge
                  command:
                    - "-r"
                    - "/app/lib/services/tracing.js"
                    - "lib/servers/graphql-main-server.js"
                  env_file: ${HOST_PROJECT_PATH:-.}/.env.galoy
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}/dev/galoy.yml:/var/yaml/custom.yaml
                apollo-router:
                  image: ghcr.io/apollographql/router:v1.25.0
                  environment:
                    - APOLLO_ROUTER_SUPERGRAPH_PATH=/repo/dev/apollo-federation/supergraph.graphql
                    - APOLLO_ROUTER_CONFIG_PATH=/repo/dev/apollo-federation/router.yaml
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}:/repo
                otel-agent:
                  image: otel/opentelemetry-collector-contrib:0.79.0
                  command: ["--config=/etc/otel-agent-config.yaml"]
                  environment:
                    - HONEYCOMB_DATASET=${HONEYCOMB_DATASET}
                    - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}/dev/otel-agent-config.yaml:/etc/otel-agent-config.yaml
                price:
                  image: us.gcr.io/galoy-org/price:edge
                price-history:
                  image: us.gcr.io/galoy-org/price-history:edge
                  command: ./scripts/run-servers-dev.sh
                  environment:
                    - DB_HOST=postgres-price-history
                    - DB_PORT=5432
                    - DB_USER=galoy-price-usr
                    - DB_PWD=galoy-price-pwd
                    - DB_DB=galoy-price-history
                    - DB_POOL_MIN=1
                    - DB_POOL_MAX=5
                    - DB_DEBUG=false
                  depends_on:
                    - postgres-price-history
                    - price-history-migrate
                price-history-migrate:
                  image: us.gcr.io/galoy-org/price-history-migrate:edge
                  environment:
                    - DB_HOST=postgres-price-history
                    - DB_PORT=5432
                    - DB_USER=galoy-price-usr
                    - DB_PWD=galoy-price-pwd
                    - DB_DB=galoy-price-history
                    - DB_POOL_MIN=1
                    - DB_POOL_MAX=5
                    - DB_DEBUG=false
                  depends_on: [postgres-price-history]
                redis:
                  image: redis:7.0.8
                  environment:
                    - ALLOW_EMPTY_PASSWORD=yes
                    - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
                mongodb:
                  image: mongo:${MONGODB_VERSION:-6.0.5}
                  environment:
                    - MONGO_INITDB_DATABASE=galoy
                postgres-price-history:
                  image: postgres:14.1
                  environment:
                    - POSTGRES_USER=galoy-price-usr
                    - POSTGRES_PASSWORD=galoy-price-pwd
                    - POSTGRES_DB=galoy-price-history
                bitcoind:
                  image: lncm/bitcoind:v24.0.1
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}/dev/bitcoind/bitcoin.conf:/data/.bitcoin/bitcoin.conf
                lnd1:
                  image: lightninglabs/lnd:v0.16.2-beta
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/lnd.conf:/root/.lnd/lnd.conf
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/tls.key:/root/.lnd/tls.key
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/tls.cert:/root/.lnd/tls.cert
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd1.wallet.db:/root/.lnd/wallet.db
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd1.macaroons.db:/root/.lnd/macaroons.db
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd1.admin.macaroon:/root/.lnd/admin.macaroon
                  depends_on: [bitcoind]
                  entrypoint: ["/bin/sh", "-c"]
                  command:
                    - |
                      mkdir -p /root/.lnd/data/chain/bitcoin/regtest/
                      cp /root/.lnd/wallet.db /root/.lnd/data/chain/bitcoin/regtest/wallet.db
                      cp /root/.lnd/macaroons.db /root/.lnd/data/chain/bitcoin/regtest/macaroons.db
                      cp /root/.lnd/admin.macaroon /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
                      /bin/lnd
                lnd2:
                  image: lightninglabs/lnd:v0.16.2-beta
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/lnd.conf:/root/.lnd/lnd.conf
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/tls.key:/root/.lnd/tls.key
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/tls.cert:/root/.lnd/tls.cert
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd2.wallet.db:/root/.lnd/wallet.db
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd2.macaroons.db:/root/.lnd/macaroons.db
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd2.admin.macaroon:/root/.lnd/admin.macaroon
                  depends_on: [bitcoind]
                  entrypoint: ["/bin/sh", "-c"]
                  command:
                    - |
                      mkdir -p /root/.lnd/data/chain/bitcoin/regtest/
                      cp /root/.lnd/wallet.db /root/.lnd/data/chain/bitcoin/regtest/wallet.db
                      cp /root/.lnd/macaroons.db /root/.lnd/data/chain/bitcoin/regtest/macaroons.db
                      cp /root/.lnd/admin.macaroon /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
                      /bin/lnd
                lnd-outside-1:
                  image: lightninglabs/lnd:v0.16.2-beta
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/lnd.conf:/root/.lnd/lnd.conf
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/tls.key:/root/.lnd/tls.key
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/tls.cert:/root/.lnd/tls.cert
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd-outside-1.wallet.db:/root/.lnd/wallet.db
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd-outside-1.macaroons.db:/root/.lnd/macaroons.db
                    - ${HOST_PROJECT_PATH:-.}/dev/lnd/regtest/lnd-outside-1.admin.macaroon:/root/.lnd/admin.macaroon
                  entrypoint: ["/bin/sh", "-c"]
                  command:
                    - |
                      mkdir -p /root/.lnd/data/chain/bitcoin/regtest/
                      cp /root/.lnd/wallet.db /root/.lnd/data/chain/bitcoin/regtest/wallet.db
                      cp /root/.lnd/macaroons.db /root/.lnd/data/chain/bitcoin/regtest/macaroons.db
                      cp /root/.lnd/admin.macaroon /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
                      /bin/lnd
                  depends_on: [bitcoind]
                bats-tests:
                  image: us.gcr.io/galoy-org/nodejs-concourse
                  depends_on:
                    - bats-deps
                  command: ["make", "execute-bats-from-within-container"]
                  working_dir: /repo
                  env_file:
                    - ${TMP_ENV_CI:-.env.galoy}
                  environment:
                    - GALOY_ENDPOINT=oathkeeper:4455
                    - HOST_PROJECT_PATH=${PWD}
                    - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
                  volumes:
                    - ${HOST_PROJECT_PATH:-.}:/repo
                    - /var/run/docker.sock:/var/run/docker.sock
                oathkeeper:
                  image: oryd/oathkeeper:v0.40.4-distroless
                  command: serve -c /home/ory/oathkeeper.yml --sqa-opt-out
                  volumes:
                    - type: bind
                      source: ${HOST_PROJECT_PATH:-.}/dev/ory
                      target: /home/ory
                kratos:
                  image: oryd/kratos:v1.0.0
                  entrypoint: sh -c
                  command: '"kratos migrate sql up -y -e && kratos serve -c /home/ory/kratos.yml --watch-courier --sqa-opt-out"'
                  environment:
                    DSN: postgres://dbuser:secret@kratos-pg:5432/default?sslmode=disable
                  links:
                    - kratos-pg:kratos-pg
                  volumes:
                    - type: bind
                      source: ${HOST_PROJECT_PATH:-.}/dev/ory
                      target: /home/ory
                kratos-pg:
                  image: postgres:14.1
                  expose:
                    - "5432"
                  environment:
                    - POSTGRES_USER=dbuser
                    - POSTGRES_PASSWORD=secret
                    - POSTGRES_DB=default

            docker-compose.override.yml: |
              version: "3"
              services:
                galoy:
                  ports:
                    - "4012:4012"
                    - "4001:4001"
                apollo-router:
                  ports:
                    - "4004:4004"
                  extra_hosts:
                    - "bats-tests:host-gateway"
                otel-agent:
                  ports:
                    - "4318:4318" # http receiver
                price:
                  ports:
                    - "50051:50051"
                    - "9464:9464"
                price-history:
                  ports:
                    - "50052:50052"
                redis:
                  ports:
                    - "6379:6379"
                mongodb:
                  environment:
                    - MONGODB_ADVERTISED_HOSTNAME=127.0.0.1
                  ports:
                    - "27017:27017"
                postgres-price-history:
                  ports:
                    - "5432:5432"
                bitcoind:
                  ports:
                    - "18443:18443"
                lnd1:
                  ports:
                    - "10009:10009"
                lnd2:
                  ports:
                    - "10010:10009"
                lnd-outside-1:
                  ports:
                    - "10012:10009"
                oathkeeper:
                  extra_hosts:
                    - "bats-tests:host-gateway"
                  ports:
                    - "4002:4455"
                    - "4456:4456"
                kratos:
                  extra_hosts:
                    - "bats-tests:host-gateway"
                  ports:
                    - "4433:4433" # public
                    - "4434:4434" # admin
                # bats-tests:
                  # ports:
                    # - "4012:4012"
                    # - "4001:4001"
                    # - "4000:4000"
                kratos-pg:
                  ports:
                    - "5433:5432"

            docker-compose.router.yml: |
              version: "3"
              services:
                bats-deps:
                  image: busybox
                  depends_on:
                    - apollo-router
                apollo-router:
                  image: ghcr.io/apollographql/router:v1.25.0
                  environment:
                    - APOLLO_ROUTER_SUPERGRAPH_PATH=/repo/dev/apollo-federation/supergraph.graphql
                    - APOLLO_ROUTER_CONFIG_PATH=/repo/dev/apollo-federation/router.yaml
                  volumes:
                    - ./:/repo
                bats-tests-subgraph:
                    image: us.gcr.io/galoy-org/nodejs-concourse
                    depends_on:
                      - bats-deps
                    command: ["make", "execute-bats-from-within-container"]
                    working_dir: /repo
                    environment:
                      - HOST_PROJECT_PATH=${PWD}
                      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}

            docker-compose.router.override.yml: |
              version: "2"
              services:
                apollo-router:
                  ports:
                    - "5004:4004" # avoid conflict is running in another container group
                  extra_hosts:
                    - "bats-tests-subgraph:host-gateway"
                bats-tests-subgraph:
                  ports:
                    - "4010:4010"
                    - "4022:4002" # avoid conflict is running in another container group

            .env.galoy: |
              # .env.ci is interpolated into tmp.env.ci during CI testing after integration-deps have been spun up.
              # tmp.env.ci is then passed into integration and e2e test containers by setting the environment variable "TMP_ENV_CI=tmp.env.ci".
              JEST_TIMEOUT=90000
              NETWORK=regtest
              NODE_ENV=development
              LND1_TLS=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZVENDQWdlZ0F3SUJBZ0lSQU9zZzdYWFR4cnVZYlhkeTY2d3RuN1F3Q2dZSUtvWkl6ajBFQXdJd09ERWYKTUIwR0ExVUVDaE1XYkc1a0lHRjFkRzluWlc1bGNtRjBaV1FnWTJWeWRERVZNQk1HQTFVRUF4TU1PRFl4T1RneApNak5tT0Roak1CNFhEVEl6TURFeE9USXdOREUxTTFvWERUTTBNRGN5TVRJd05ERTFNMW93T0RFZk1CMEdBMVVFCkNoTVdiRzVrSUdGMWRHOW5aVzVsY21GMFpXUWdZMlZ5ZERFVk1CTUdBMVVFQXhNTU9EWXhPVGd4TWpObU9EaGoKTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFM1lieUlKWU1Vcm8zZkl0UFFucysxZ2lpTXI5NQpJUXRmclFDQ2JhOWVtcjI4TENmbk1vYy9VQVFwUlg3QVlvVFRneUdiMFBuZGNUODF5ZVgvYTlPa0RLT0I4VENCCjdqQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVL1AxRHpJUkRzTEhHMU10d3NrZE5nZ0lub1Mwd2daWUdBMVVkRVFTQgpqakNCaTRJTU9EWXhPVGd4TWpObU9EaGpnZ2xzYjJOaGJHaHZjM1NDRFd4dVpDMXZkWFJ6YVdSbExUR0NEV3h1ClpDMXZkWFJ6YVdSbExUS0NEV3h1WkMxdmRYUnphV1JsTFRPQ0JHeHVaREdDQkd4dVpES0NCSFZ1YVhpQ0NuVnUKYVhod1lXTnJaWFNDQjJKMVptTnZibTZIQkg4QUFBR0hFQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0hCS3dUQUJBdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSU5DNlJWQ3d6SzFYRnFxeVNLY0Y4QzQ5ZFlSOThjemdLNVdkcmNOCkxYYWlBaUJHYmtWeGhaeHdDaDVLQ1o1Z2M1Q2FsQ0RvaGNxVkdiaHNya0hHTFhpdHN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
              LND2_TLS=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZVENDQWdlZ0F3SUJBZ0lSQU9zZzdYWFR4cnVZYlhkeTY2d3RuN1F3Q2dZSUtvWkl6ajBFQXdJd09ERWYKTUIwR0ExVUVDaE1XYkc1a0lHRjFkRzluWlc1bGNtRjBaV1FnWTJWeWRERVZNQk1HQTFVRUF4TU1PRFl4T1RneApNak5tT0Roak1CNFhEVEl6TURFeE9USXdOREUxTTFvWERUTTBNRGN5TVRJd05ERTFNMW93T0RFZk1CMEdBMVVFCkNoTVdiRzVrSUdGMWRHOW5aVzVsY21GMFpXUWdZMlZ5ZERFVk1CTUdBMVVFQXhNTU9EWXhPVGd4TWpObU9EaGoKTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFM1lieUlKWU1Vcm8zZkl0UFFucysxZ2lpTXI5NQpJUXRmclFDQ2JhOWVtcjI4TENmbk1vYy9VQVFwUlg3QVlvVFRneUdiMFBuZGNUODF5ZVgvYTlPa0RLT0I4VENCCjdqQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVL1AxRHpJUkRzTEhHMU10d3NrZE5nZ0lub1Mwd2daWUdBMVVkRVFTQgpqakNCaTRJTU9EWXhPVGd4TWpObU9EaGpnZ2xzYjJOaGJHaHZjM1NDRFd4dVpDMXZkWFJ6YVdSbExUR0NEV3h1ClpDMXZkWFJ6YVdSbExUS0NEV3h1WkMxdmRYUnphV1JsTFRPQ0JHeHVaREdDQkd4dVpES0NCSFZ1YVhpQ0NuVnUKYVhod1lXTnJaWFNDQjJKMVptTnZibTZIQkg4QUFBR0hFQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0hCS3dUQUJBdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSU5DNlJWQ3d6SzFYRnFxeVNLY0Y4QzQ5ZFlSOThjemdLNVdkcmNOCkxYYWlBaUJHYmtWeGhaeHdDaDVLQ1o1Z2M1Q2FsQ0RvaGNxVkdiaHNya0hHTFhpdHN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
              TLSOUTSIDE1=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZVENDQWdlZ0F3SUJBZ0lSQU9zZzdYWFR4cnVZYlhkeTY2d3RuN1F3Q2dZSUtvWkl6ajBFQXdJd09ERWYKTUIwR0ExVUVDaE1XYkc1a0lHRjFkRzluWlc1bGNtRjBaV1FnWTJWeWRERVZNQk1HQTFVRUF4TU1PRFl4T1RneApNak5tT0Roak1CNFhEVEl6TURFeE9USXdOREUxTTFvWERUTTBNRGN5TVRJd05ERTFNMW93T0RFZk1CMEdBMVVFCkNoTVdiRzVrSUdGMWRHOW5aVzVsY21GMFpXUWdZMlZ5ZERFVk1CTUdBMVVFQXhNTU9EWXhPVGd4TWpObU9EaGoKTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFM1lieUlKWU1Vcm8zZkl0UFFucysxZ2lpTXI5NQpJUXRmclFDQ2JhOWVtcjI4TENmbk1vYy9VQVFwUlg3QVlvVFRneUdiMFBuZGNUODF5ZVgvYTlPa0RLT0I4VENCCjdqQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVL1AxRHpJUkRzTEhHMU10d3NrZE5nZ0lub1Mwd2daWUdBMVVkRVFTQgpqakNCaTRJTU9EWXhPVGd4TWpObU9EaGpnZ2xzYjJOaGJHaHZjM1NDRFd4dVpDMXZkWFJ6YVdSbExUR0NEV3h1ClpDMXZkWFJ6YVdSbExUS0NEV3h1WkMxdmRYUnphV1JsTFRPQ0JHeHVaREdDQkd4dVpES0NCSFZ1YVhpQ0NuVnUKYVhod1lXTnJaWFNDQjJKMVptTnZibTZIQkg4QUFBR0hFQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0hCS3dUQUJBdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSU5DNlJWQ3d6SzFYRnFxeVNLY0Y4QzQ5ZFlSOThjemdLNVdkcmNOCkxYYWlBaUJHYmtWeGhaeHdDaDVLQ1o1Z2M1Q2FsQ0RvaGNxVkdiaHNya0hHTFhpdHN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
              TLSOUTSIDE2=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZVENDQWdlZ0F3SUJBZ0lSQU9zZzdYWFR4cnVZYlhkeTY2d3RuN1F3Q2dZSUtvWkl6ajBFQXdJd09ERWYKTUIwR0ExVUVDaE1XYkc1a0lHRjFkRzluWlc1bGNtRjBaV1FnWTJWeWRERVZNQk1HQTFVRUF4TU1PRFl4T1RneApNak5tT0Roak1CNFhEVEl6TURFeE9USXdOREUxTTFvWERUTTBNRGN5TVRJd05ERTFNMW93T0RFZk1CMEdBMVVFCkNoTVdiRzVrSUdGMWRHOW5aVzVsY21GMFpXUWdZMlZ5ZERFVk1CTUdBMVVFQXhNTU9EWXhPVGd4TWpObU9EaGoKTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFM1lieUlKWU1Vcm8zZkl0UFFucysxZ2lpTXI5NQpJUXRmclFDQ2JhOWVtcjI4TENmbk1vYy9VQVFwUlg3QVlvVFRneUdiMFBuZGNUODF5ZVgvYTlPa0RLT0I4VENCCjdqQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVL1AxRHpJUkRzTEhHMU10d3NrZE5nZ0lub1Mwd2daWUdBMVVkRVFTQgpqakNCaTRJTU9EWXhPVGd4TWpObU9EaGpnZ2xzYjJOaGJHaHZjM1NDRFd4dVpDMXZkWFJ6YVdSbExUR0NEV3h1ClpDMXZkWFJ6YVdSbExUS0NEV3h1WkMxdmRYUnphV1JsTFRPQ0JHeHVaREdDQkd4dVpES0NCSFZ1YVhpQ0NuVnUKYVhod1lXTnJaWFNDQjJKMVptTnZibTZIQkg4QUFBR0hFQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0hCS3dUQUJBdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSU5DNlJWQ3d6SzFYRnFxeVNLY0Y4QzQ5ZFlSOThjemdLNVdkcmNOCkxYYWlBaUJHYmtWeGhaeHdDaDVLQ1o1Z2M1Q2FsQ0RvaGNxVkdiaHNya0hHTFhpdHN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
              TLSOUTSIDE3=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZVENDQWdlZ0F3SUJBZ0lSQU9zZzdYWFR4cnVZYlhkeTY2d3RuN1F3Q2dZSUtvWkl6ajBFQXdJd09ERWYKTUIwR0ExVUVDaE1XYkc1a0lHRjFkRzluWlc1bGNtRjBaV1FnWTJWeWRERVZNQk1HQTFVRUF4TU1PRFl4T1RneApNak5tT0Roak1CNFhEVEl6TURFeE9USXdOREUxTTFvWERUTTBNRGN5TVRJd05ERTFNMW93T0RFZk1CMEdBMVVFCkNoTVdiRzVrSUdGMWRHOW5aVzVsY21GMFpXUWdZMlZ5ZERFVk1CTUdBMVVFQXhNTU9EWXhPVGd4TWpObU9EaGoKTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFM1lieUlKWU1Vcm8zZkl0UFFucysxZ2lpTXI5NQpJUXRmclFDQ2JhOWVtcjI4TENmbk1vYy9VQVFwUlg3QVlvVFRneUdiMFBuZGNUODF5ZVgvYTlPa0RLT0I4VENCCjdqQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVL1AxRHpJUkRzTEhHMU10d3NrZE5nZ0lub1Mwd2daWUdBMVVkRVFTQgpqakNCaTRJTU9EWXhPVGd4TWpObU9EaGpnZ2xzYjJOaGJHaHZjM1NDRFd4dVpDMXZkWFJ6YVdSbExUR0NEV3h1ClpDMXZkWFJ6YVdSbExUS0NEV3h1WkMxdmRYUnphV1JsTFRPQ0JHeHVaREdDQkd4dVpES0NCSFZ1YVhpQ0NuVnUKYVhod1lXTnJaWFNDQjJKMVptTnZibTZIQkg4QUFBR0hFQUFBQUFBQUFBQUFBQUFBQUFBQUFBR0hCS3dUQUJBdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSU5DNlJWQ3d6SzFYRnFxeVNLY0Y4QzQ5ZFlSOThjemdLNVdkcmNOCkxYYWlBaUJHYmtWeGhaeHdDaDVLQ1o1Z2M1Q2FsQ0RvaGNxVkdiaHNya0hHTFhpdHN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
              LND1_MACAROON=AgEDbG5kAvgBAwoQB1FdhGa9xoewc1LEXmnURRIBMBoWCgdhZGRyZXNzEgRyZWFkEgV3cml0ZRoTCgRpbmZvEgRyZWFkEgV3cml0ZRoXCghpbnZvaWNlcxIEcmVhZBIFd3JpdGUaIQoIbWFjYXJvb24SCGdlbmVyYXRlEgRyZWFkEgV3cml0ZRoWCgdtZXNzYWdlEgRyZWFkEgV3cml0ZRoXCghvZmZjaGFpbhIEcmVhZBIFd3JpdGUaFgoHb25jaGFpbhIEcmVhZBIFd3JpdGUaFAoFcGVlcnMSBHJlYWQSBXdyaXRlGhgKBnNpZ25lchIIZ2VuZXJhdGUSBHJlYWQAAAYgqHDdwGCqx0aQL1/Z3uUfzCpeBhfapGf9s/AZPOVwf6s=
              LND2_MACAROON=AgEDbG5kAvgBAwoQX0BxfhQTxLTiqaceBnGnfBIBMBoWCgdhZGRyZXNzEgRyZWFkEgV3cml0ZRoTCgRpbmZvEgRyZWFkEgV3cml0ZRoXCghpbnZvaWNlcxIEcmVhZBIFd3JpdGUaIQoIbWFjYXJvb24SCGdlbmVyYXRlEgRyZWFkEgV3cml0ZRoWCgdtZXNzYWdlEgRyZWFkEgV3cml0ZRoXCghvZmZjaGFpbhIEcmVhZBIFd3JpdGUaFgoHb25jaGFpbhIEcmVhZBIFd3JpdGUaFAoFcGVlcnMSBHJlYWQSBXdyaXRlGhgKBnNpZ25lchIIZ2VuZXJhdGUSBHJlYWQAAAYgMAKlr1HehfBpn2R5RPE2IuY9r/18QBeLZxYgRidpos4=
              LNDONCHAIN_MACAROON=
              MACAROONOUTSIDE1=AgEDbG5kAvgBAwoQeE+5exgz7/0ExCn7H6AJlBIBMBoWCgdhZGRyZXNzEgRyZWFkEgV3cml0ZRoTCgRpbmZvEgRyZWFkEgV3cml0ZRoXCghpbnZvaWNlcxIEcmVhZBIFd3JpdGUaIQoIbWFjYXJvb24SCGdlbmVyYXRlEgRyZWFkEgV3cml0ZRoWCgdtZXNzYWdlEgRyZWFkEgV3cml0ZRoXCghvZmZjaGFpbhIEcmVhZBIFd3JpdGUaFgoHb25jaGFpbhIEcmVhZBIFd3JpdGUaFAoFcGVlcnMSBHJlYWQSBXdyaXRlGhgKBnNpZ25lchIIZ2VuZXJhdGUSBHJlYWQAAAYgL7pU+cKOt6zGyWTdWWmAJLP1L3cnbOPb4Rd3QtniyyM=
              MACAROONOUTSIDE2=AgEDbG5kAvgBAwoQfKO82/iPT2zIwWYPrOXvABIBMBoWCgdhZGRyZXNzEgRyZWFkEgV3cml0ZRoTCgRpbmZvEgRyZWFkEgV3cml0ZRoXCghpbnZvaWNlcxIEcmVhZBIFd3JpdGUaIQoIbWFjYXJvb24SCGdlbmVyYXRlEgRyZWFkEgV3cml0ZRoWCgdtZXNzYWdlEgRyZWFkEgV3cml0ZRoXCghvZmZjaGFpbhIEcmVhZBIFd3JpdGUaFgoHb25jaGFpbhIEcmVhZBIFd3JpdGUaFAoFcGVlcnMSBHJlYWQSBXdyaXRlGhgKBnNpZ25lchIIZ2VuZXJhdGUSBHJlYWQAAAYg2XkV+4Z4inbfXGZivRoY+r7KHNZhgxkCEdKByxbeb/Q=
              MACAROONOUTSIDE3=AgEDbG5kAvgBAwoQaGu81bEHuMv1IlUKBRwibhIBMBoWCgdhZGRyZXNzEgRyZWFkEgV3cml0ZRoTCgRpbmZvEgRyZWFkEgV3cml0ZRoXCghpbnZvaWNlcxIEcmVhZBIFd3JpdGUaIQoIbWFjYXJvb24SCGdlbmVyYXRlEgRyZWFkEgV3cml0ZRoWCgdtZXNzYWdlEgRyZWFkEgV3cml0ZRoXCghvZmZjaGFpbhIEcmVhZBIFd3JpdGUaFgoHb25jaGFpbhIEcmVhZBIFd3JpdGUaFAoFcGVlcnMSBHJlYWQSBXdyaXRlGhgKBnNpZ25lchIIZ2VuZXJhdGUSBHJlYWQAAAYgtr8eEn6XRCXTV4zbjRH9iob+XCIMuEXe8R3kApxvI2Y=
              LND1_PUBKEY=03ca1907342d5d37744cb7038375e1867c24a87564c293157c95b2a9d38dcfb4c2
              LND2_PUBKEY=039341ef13e776dc1611502cf510110d9ac5cdc252141f5997adcfd72cef34c3a7
              LND_OUTSIDE_1_PUBKEY=02147eeb1561922fe768a6a92df116f5fec8c1869ddcb6e00ee1fd0df146d51c4a
              LND_OUTSIDE_2_PUBKEY=02f4888c0fffc494874da4445918dadaf88a63dbb96bce734b087bed56f60d231b
              LNDONCHAIN_PUBKEY=
              BITCOINDPORT=18443
              BITCOINDADDR=bitcoind
              BITCOIND_SIGNER_PORT=18443
              BITCOIND_SIGNER_ADDR=bitcoind-signer
              BITCOINDRPCPASS=rpcpassword
              LND1_DNS=lnd1
              LND2_DNS=lnd2
              LNDONCHAIN_DNS=lnd1
              LNDOUTSIDE1ADDR=lnd-outside-1
              LNDOUTSIDE2ADDR=lnd-outside-2
              LNDOUTSIDE3ADDR=lnd-outside-3
              MONGODB_ADDRESS=mongodb
              REDIS_0_INTERNAL_IP=redis
              REDIS_0_PORT=6379
              REDIS_0_DNS=redis
              REDIS_0_SENTINEL_PORT=26379
              BRIA_HOST=bria
              BRIA_PORT=2742
              PRICE_HOST=price
              PRICE_PORT=50051
              PRICE_HISTORY_HOST=price-history
              PRICE_HISTORY_PORT=50052
              OATHKEEPER_HOST=oathkeeper
              OATHKEEPER_PORT=4455
              WEBSOCKET_PORT=4000
              LOCAL=docker-compose
              GEETEST_ID=geetest_id
              GEETEST_KEY=geetest_key
              TWILIO_ACCOUNT_SID=AC_twilio_id
              TWILIO_AUTH_TOKEN=AC_twilio_auth_token
              TWILIO_VERIFY_SERVICE_ID=VA_twilio_service
              COMMITHASH=hash
              BUILDTIME=2022
              HELMREVISION=1
              PRICE_SERVER_HOST=stablesats
              LND1_LOOP_MACAROON=AgEEbG9vcAJ3AwoQRGymK6/vfF3wwuVmaTj3RhIBMBoMCgRhdXRoEgRyZWFkGg8KBGxvb3ASAmluEgNvdXQaGgoLc3VnZ2VzdGlvbnMSBHJlYWQSBXdyaXRlGhUKBHN3YXASB2V4ZWN1dGUSBHJlYWQaDQoFdGVybXMSBHJlYWQAAAYgAFS/qTZItZ3ZKksQkfXAKFnsb0JS5Ok3Oi5fAgCaE/k=
              LND2_LOOP_MACAROON=AgEEbG9vcAJ3AwoQ6Ntr7+DpuicdMgmVPKvDVxIBMBoMCgRhdXRoEgRyZWFkGg8KBGxvb3ASAmluEgNvdXQaGgoLc3VnZ2VzdGlvbnMSBHJlYWQSBXdyaXRlGhUKBHN3YXASB2V4ZWN1dGUSBHJlYWQaDQoFdGVybXMSBHJlYWQAAAYgU6bTJC50AuYehDtb9U2s4EuH7C2Tf8eAppPPOFeUXds=
              LND1_LOOP_TLS=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWMyZ0F3SUJBZ0lSQU1memVXM0J0UWJaaTdxSjZoQk5vMHN3Q2dZSUtvWkl6ajBFQXdJd09URWcKTUI0R0ExVUVDaE1YYkc5dmNDQmhkWFJ2WjJWdVpYSmhkR1ZrSUdObGNuUXhGVEFUQmdOVkJBTVREREpqWkdRMQpOMlptWlRZeFpEQWVGdzB5TWpBNU1EY3lNVE15TWpSYUZ3MHlNekV4TURJeU1UTXlNalJhTURreElEQWVCZ05WCkJBb1RGMnh2YjNBZ1lYVjBiMmRsYm1WeVlYUmxaQ0JqWlhKME1SVXdFd1lEVlFRREV3d3lZMlJrTlRkbVptVTIKTVdRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUcU5qcVFMUGNHSURaSmtHenNlL3d2ZWt0TwpRVlhpaFJ6WmVLay9ZMFlTNDFkejB2TjlQdktaM0ZxTmN2eEN5a1cvZ1dKNWhBdEpCZTdDaTZhWitnR0tvNEcxCk1JR3lNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRZHJscHQzM2lLdlZUZWQyVnV4Y25uQVJMeTlEQmJCZ05WSFJFRQpWREJTZ2d3eVkyUmtOVGRtWm1VMk1XU0NDV3h2WTJGc2FHOXpkSUlFZFc1cGVJSUtkVzVwZUhCaFkydGxkSUlIClluVm1ZMjl1Ym9jRWZ3QUFBWWNRQUFBQUFBQUFBQUFBQUFBQUFBQUFBWWNFckJzQUR6QUtCZ2dxaGtqT1BRUUQKQWdOSEFEQkVBaUJYaFI2VmRzSFYrREhhWGRrV2VRZ0pzMlRxT0pXajBwUXI1ZHFLcFViNjlBSWdTeGtYYTZFRQpWVk9CZ0VhNXR5Z3NBcGM2bDBSak5nVGF2SkF6T2dWT2tIWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
              LND2_LOOP_TLS=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lRVjd2dFlUbzJYS1NybWt6N3d0SjNjVEFLQmdncWhrak9QUVFEQWpBNU1TQXcKSGdZRFZRUUtFeGRzYjI5d0lHRjFkRzluWlc1bGNtRjBaV1FnWTJWeWRERVZNQk1HQTFVRUF4TU1aVEZpTkRobQpZbVUwTmpZek1CNFhEVEl5TURrd056SXhNekl5TlZvWERUSXpNVEV3TWpJeE16SXlOVm93T1RFZ01CNEdBMVVFCkNoTVhiRzl2Y0NCaGRYUnZaMlZ1WlhKaGRHVmtJR05sY25ReEZUQVRCZ05WQkFNVERHVXhZalE0Wm1KbE5EWTIKTXpCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkVYbzlndHpkUnFMTWFhdjJ1VDA4eHlTUUpTKwpoMFNMcUMrdnpzR0RhZ2owOXg3UW9ud3oralo0eHppeklsdWVOY0JlWDYzd3VGZ0dwOTlBMW9mMDQyU2pnYlV3CmdiSXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkZOM2E3WkY5Y2FSUGJnNDJXYitOYnVYM2hTYU1Gc0dBMVVkRVFSVQpNRktDREdVeFlqUTRabUpsTkRZMk00SUpiRzlqWVd4b2IzTjBnZ1IxYm1sNGdncDFibWw0Y0dGamEyVjBnZ2RpCmRXWmpiMjV1aHdSL0FBQUJoeEFBQUFBQUFBQUFBQUFBQUFBQUFBQUJod1NzR3dBUU1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURUcUpnVitReks2N3lSN1lGcWtyQkN6aEQ2OExZcjBBM1JMWFF1ckM2d21BSWdZNGdESjA1eQpRTjJCY2YvaEl6VHJwb1ZlK3Y0blBRREg3bXBFQXRyOE96MD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
              KRATOS_MASTER_USER_PASSWORD=passwordHardtoFindWithNumber123
              KRATOS_PUBLIC_API=http://kratos:4433
              KRATOS_ADMIN_API=http://kratos:4434
              KRATOS_CALLBACK_API_KEY=The-Value-of-My-Key
              APPCHECK_AUDIENCE=projects/72279297366
              APPCHECK_ISSUER=https://firebaseappcheck.googleapis.com/72279297366
              APPCHECK_JWKSURI=https://firebaseappcheck.googleapis.com/v1beta/jwks
              OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
              MATTERMOST_WEBHOOK_URL=https://chat.galoy.io/hooks/sometoken
              KRATOS_PG_CON="postgres://dbuser:secret@kratos-pg:5432/default?sslmode=disable"
              UNSECURE_DEFAULT_LOGIN_CODE=000000
              IS_CI=true

            run.sh: |
              #!/bin/sh
              #!/bin/zsh
              #!/bin/bash

              cp docker/docker-compose.yml .
              cp docker/docker-compose.override.yml .
              cp docker/.env.galoy .
              direnv allow
              docker compose --project-name galoy-stack up -d
