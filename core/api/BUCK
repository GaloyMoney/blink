load(
  "@toolchains//workspace-pnpm:macros.bzl",
  "dev_pnpm_task_binary",
  "build_node_modules",
  "tsc_build",
  "prod_tsc_build",
  "prod_tsc_build_bin",
  "audit",
  "eslint",
  "typescript_check",
  "yaml_check",
  "madge_check",
)
load("@toolchains//rover:macros.bzl", "sdl", "diff_check", "dev_update_file")

dev_pnpm_task_binary(
  name = "lint-fix",
  command = "eslint-fix",
)

export_file(
  name = "package.json",
  visibility = ["PUBLIC"],
)

build_node_modules(
  name = "node_modules",
)

build_node_modules(
  name = "node_modules_prod",
  prod_only = True,
)

filegroup(
    name = "src",
    srcs = glob([
        "src/**",
        "tsconfig.json",
        "tsconfig-build.json",
    ]),
)

filegroup(
    name = "test_src",
    srcs = glob([
        "test/**",
    ]),
)

filegroup(
  name = "locales",
  srcs = glob([
    "src/config/locales/*.json"
  ])
)

filegroup(
  name = "protos",
  srcs = glob([
    "src/services/**/protos/**",
    "src/services/**/proto/**"
  ])
)

tsc_build(
  name = "build",
  tsconfig = "tsconfig-build.json",
  srcs = [":src"],
  additional_dist_files = [":protos", ":locales"]
)

prod_tsc_build(
  name = "prod_build",
  visibility = ["PUBLIC"],
)

prod_tsc_build_bin(
  name = "api",
  preload_file = "services/tracing.js",
  run_file = "servers/graphql-main-server.js",
)

prod_tsc_build_bin(
  name = "write-sdl",
  run_file = "servers/write-sdl.js",
)

sdl(
  name = "public-sdl",
  generator = ":write-sdl",
  args = ["public"],
  visibility = ["PUBLIC"],
)

diff_check(
  name = "public-schema-diff",
  original = "src/graphql/public/schema.graphql",
  new = ":public-sdl"
)

dev_update_file(
  name = "update-public-schema",
  generated = ":public-sdl",
  out = "src/graphql/public/schema.graphql"
)

sdl(
  name = "admin-sdl",
  generator = ":write-sdl",
  args = ["admin"]
)

diff_check(
  name = "admin-schema-diff",
  original = "src/graphql/admin/schema.graphql",
  new = ":admin-sdl"
)

dev_update_file(
  name = "update-admin-schema",
  generated = ":admin-sdl",
  out = "src/graphql/admin/schema.graphql"
)

audit(
    name = "audit",
    level = "critical",
)

eslint(
    name = "check-lint",
    srcs = [":src"] + [":test_src"] + glob([".eslint*"]),
    extensions = [".ts"],
    allow_warnings = True,
)

typescript_check(
    name = "check-type",
    srcs = [":src"] + [":test_src"],
)

yaml_check(
    name = "check-yaml",
    srcs = glob([
        ".prettier*",
        "prettier*",
        "*.yml",
        "*.yaml",
    ]),
)

madge_check(
    name = "check-circular-dependencies",
    srcs = [":src"],
)

test_suite(
    name = "test-unit",
    tests = [
        ":audit",
        ":check-lint",
        ":check-type",
        ":check-yaml",
        ":check-circular-dependencies",
        ":public-schema-diff",
        ":admin-schema-diff",
    ],
)
