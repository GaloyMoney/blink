type ApiKey {
	id: ID!
	name: String!
	createdAt: DateTime!
	expiration: DateTime!
	lastUse: DateTime!
	scopes: [Scope!]!
}


extend type ConsumerAccount @key(fields: "id") {
	id: ID! @external
	apiKeys: [ApiKey!]!
}

"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime




type MutationRoot {
	helloWorldMutation: String!
}


enum Scope {
	CREATE
	READ
	UPDATE
	DELETE
}


extend schema @link(
	url: "https://specs.apollo.dev/federation/v2.3",
	import: ["@key", "@tag", "@shareable", "@inaccessible", "@override", "@external", "@provides", "@requires", "@composeDirective", "@interfaceObject"]
)
directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
