type InAppNotification {
	id: ID!
	title: String!
	body: String!
	deepLink: String
	createdAt: Timestamp!
	readAt: Timestamp
}


type Mutation {
	userInAppNotificationMarkAsRead(input: UserInAppNotificationMarkAsReadInput!): UserInAppNotificationMarkAsReadPayload!
}



scalar Timestamp

extend type User @key(fields: "id") {
	id: ID! @external
	inAppNotifications(onlyUnread: Boolean): [InAppNotification!]!
}

input UserInAppNotificationMarkAsReadInput {
	notificationId: ID!
}

type UserInAppNotificationMarkAsReadPayload {
	notification: InAppNotification!
}

extend schema @link(
	url: "https://specs.apollo.dev/federation/v2.3",
	import: ["@key", "@tag", "@shareable", "@inaccessible", "@override", "@external", "@provides", "@requires", "@composeDirective", "@interfaceObject"]
)
directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
