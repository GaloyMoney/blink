{
  "name": "galoy",
  "scripts": {
    "tsc-check": "tsc --noEmit --skipLibCheck",
    "eslint-check": "eslint \"{src,test}/**/*.ts\"",
    "eslint-fix": "eslint \"{src,test}/**/*.ts\" --fix",
    "prettier-check": "prettier --check .",
    "prettier-write": "prettier --write .",
    "build": "tsc -p tsconfig-build.json --skipLibCheck && cp -R src/services/protos lib/services/ && cp src/graphql/old-schema.graphql lib/graphql/ && tscpaths -p tsconfig.json -s ./src -o ./lib",
    "start": "yarn build && source ./scripts/export-local.sh && node lib/servers/graphql-old-server.js | pino-pretty -c -l",
    "trigger": "yarn build && source ./scripts/export-local.sh && node lib/servers/trigger.js | pino-pretty -c -l",
    "watch": "nodemon -V -e ts,graphql -w ./src -x yarn run start",
    "watch-trigger": "nodemon -V -e ts,graphql -w ./src -x yarn trigger",
    "kill-graphql": "kill $(lsof -t -i:4000)",
    "uninstall-charts-helm": "helm uninstall lnd1 | helm uninstall lnd2 | helm uninstall lnd-outside-1 | helm uninstall lnd-outside-2 | helm uninstall bitcoind | helm uninstall galoy",
    "uninstall-charts": "yarn uninstall-charts-helm || : && sleep 15 && kubectl delete --all pvc",
    "add-charts": "export LOCAL=true && source ./scripts/export-local.sh && ./scripts/init-local-test.sh",
    "forward-mongodb": "kubectl port-forward $(kubectl get pods -l app.kubernetes.io/name=mongodb | awk '/mongo/ {print $1}') 27017",
    "restart-charts": "yarn use-minikube && yarn uninstall-charts || : && sleep 5 && yarn run add-charts",
    "use-minikube": "kubectl config use-context minikube",
    "cron": "yarn build && source scripts/export-local.sh && node src/servers/cron.js",
    "exporter": "yarn build && node lib/servers/exporter.js",
    "lnd-connection": "source scripts/export-local.sh && echo $MACAROON | base64 -d > ./macaroon && echo $TLS | base64 -d > ./tls.cert && lncli --network regtest --macaroonpath=./macaroon --tlscertpath=./tls.cert --rpcserver=${LNDDNS}:${LNDRPCPORT} getinfo",
    "lncli": "source scripts/export-local.sh && echo $MACAROON | base64 -d > ./macaroon && echo $TLS | base64 -d > ./tls.cert && lncli --network regtest --macaroonpath=./macaroon --tlscertpath=./tls.cert --rpcserver=${LNDDNS}:${LNDRPCPORT}",
    "postman": "yarn node test/postman/newman.ts",
    "bitcoin-cli": "source ./scripts/export-local.sh && kubectl exec bitcoind-0 -- bitcoin-cli -rpcuser=rpcuser -rpcpassword=$BITCOINDRPCPASS -regtest",
    "update-postman": "curl --location --request GET \"https://api.getpostman.com/collections/4e3fee88-7267-44e1-a316-b81e90b0bd2b\" --header \"X-Api-Key: $POSTMANAPIKEY\" | jq . > test/postman/graphql.postman-collection.json",
    "test": "export JEST_JUNIT_OUTPUT_DIR=\"./artifacts\" && jest --ci --reporters=default --reporters=jest-junit",
    "test-local": "yarn use-minikube && source ./scripts/export-local.sh && yarn jest --runInBand --verbose $TEST | pino-pretty -c -l",
    "test-local-restart": "./scripts/delete-pods.sh && source ./scripts/export-local.sh && yarn run test-local",
    "test-local-clean": "yarn run restart-charts && yarn jest --clearCache && yarn run test-local",
    "test:unit": ". ./.envrc && LOGLEVEL=warn jest --config ./test/jest-unit.config.js --bail --verbose $TEST | yarn pino-pretty -c -l",
    "test:integration": ". ./.envrc && LOGLEVEL=warn jest --config ./test/jest-integration.config.js --bail --runInBand --verbose $TEST | yarn pino-pretty -c -l"
  },
  "engines": {
    "node": "14"
  },
  "dependencies": {
    "@google-cloud/storage": "^5.8.5",
    "@grpc/grpc-js": "^1.3.4",
    "@grpc/proto-loader": "^0.6.4",
    "@profusion/apollo-validation-directives": "^2.1.5",
    "apollo-server-errors": "^2.5.0",
    "apollo-server-express": "^2.25.2",
    "axios": "^0.21.1",
    "bip66": "^1.1.5",
    "bitcoin-core": "^3.0.0",
    "bitcoinjs-lib": "^5.2.0",
    "bluebird": "^3.7.2",
    "ccxt": "^1.53.54",
    "csv-writer": "^1.6.0",
    "dotenv": "^10.0.0",
    "dropbox": "^10.4.1",
    "express": "^4.17.1",
    "express-jwt": "^6.0.0",
    "firebase-admin": "^9.10.0",
    "graphql": "^15.5.1",
    "graphql-middleware": "^6.0.10",
    "graphql-relay": "^0.8.0",
    "graphql-shield": "^7.5.0",
    "graphql-subscriptions": "^1.2.1",
    "graphql-tools": "^7.0.5",
    "helmet": "^4.6.0",
    "invoices": "^2.0.0",
    "ioredis": "^4.27.6",
    "js-yaml": "^4.1.0",
    "jsonwebtoken": "^8.5.1",
    "lightning": "^4.1.0",
    "ln-service": "^51.8.7",
    "lodash": "^4.17.21",
    "medici": "^4.0.2",
    "moment": "^2.29.1",
    "mongoose": "~5.10.14",
    "node-2fa": "^2.0.2",
    "node-cache": "^5.1.2",
    "pino": "^6.11.3",
    "pino-http": "^5.5.0",
    "prom-client": "^13.1.0",
    "rate-limiter-flexible": "^2.2.2",
    "redlock": "^4.2.0",
    "subscriptions-transport-ws": "^0.9.19",
    "twilio": "^3.65.0",
    "uuid": "^8.3.1"
  },
  "devDependencies": {
    "@babel/core": "^7.14.6",
    "@babel/preset-env": "^7.14.7",
    "@jagi/jest-transform-graphql": "^1.0.2",
    "@jest/test-sequencer": "^27.0.6",
    "@types/babel__core": "^7.1.15",
    "@types/babel__preset-env": "^7.9.2",
    "@types/bluebird": "^3.5.36",
    "@types/eslint": "^7.28.0",
    "@types/express": "^4.17.13",
    "@types/express-jwt": "^6.0.2",
    "@types/graphql": "^14.5.0",
    "@types/ioredis": "^4.26.4",
    "@types/jest": "^26.0.19",
    "@types/js-yaml": "^4.0.2",
    "@types/jsonwebtoken": "^8.5.4",
    "@types/lodash": "^4.14.163",
    "@types/migrate-mongo": "^8.1.2",
    "@types/mongoose": "~5.11.97",
    "@types/newman": "^5.1.4",
    "@types/node": "^14.0.0",
    "@types/nodemon": "^1.19.1",
    "@types/pino": "^6.3.8",
    "@types/pino-http": "^5.4.2",
    "@types/prettier": "^2.3.2",
    "@types/redlock": "^4.0.2",
    "@types/uuid": "^8.3.1",
    "@typescript-eslint/eslint-plugin": "^4.28.2",
    "@typescript-eslint/parser": "^4.28.2",
    "apollo-server-integration-testing": "^3.0.0",
    "apollo-server-testing": "^2.25.2",
    "eslint": "^7.30.0",
    "eslint-plugin-import": "^2.23.4",
    "jest": "^27.0.6",
    "jest-junit": "^12.2.0",
    "migrate-mongo": "^8.2.2",
    "newman": "^5.2.4",
    "nodemon": "^2.0.9",
    "pino-pretty": "^5.1.0",
    "prettier": "^2.3.2",
    "ts-jest": "^27.0.3",
    "ts-node": "^10.0.0",
    "ts-node-dev": "^1.1.8",
    "tsconfig-paths": "^3.9.0",
    "tscpaths": "^0.0.9",
    "typescript": "^4.3.5"
  },
  "resolutions": {
    "**/**/ws": ">=7.4.6",
    "**/**/json-bigint": ">=1.0.0",
    "**/**/mongoose": "~5.10.14"
  },
  "private": true
}
