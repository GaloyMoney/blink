global:
  network: mainnet

galoy:
  name: "Galoy Wallet"

# todo: this should be injected in a configmap from bitcoind
bitcoind:
  port:
    8332

ca:
  CAEmail: dev@galoy.io

image:
  repository: gcr.io/galoyapp/galoy

deployment:
- name: graphql
  args: ["lib/servers/graphql-old-server.js"]
  healthz: true
  targetPort: 4000
  replicaCount: 2
  podAnnotations: {}
- name: graphql-admin
  args: ["lib/servers/graphql-admin-server.js"]
  healthz: true
  targetPort: 4001
  replicaCount: 1
- name: api
  args: ["lib/servers/graphql-main-server.js"]
  healthz: true
  targetPort: 4002
  replicaCount: 1
- name: exporter
  args: ["lib/servers/exporter.js"]
  healthz: true
  targetPort: 3000
  replicaCount: 1
  podAnnotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "3000"
    prometheus.io/scrape: "true"
- name: trigger
  args: ["lib/servers/trigger.js"]
  healthz: true
  targetPort: 8888
  replicaCount: 1
  timeoutSeconds: 30
  # cpu request: 0.001

service:
- name: graphql
  type: NodePort
  targetPort: 4000
  port: 4000
- name: graphql-admin
  type: NodePort
  targetPort: 4001
  port: 4001
- name: api
  type: NodePort
  targetPort: 4002
  port: 4002
- name: trigger
  type: ClusterIP
  targetPort: 8888
  port: 8888

cron:
- name: cronjob
  args: ["lib/servers/cron.js"]
  schedule: "0 2 * * *"
- name: balance-notif
  args: ["lib/servers/daily-balance-notification.js"]
  schedule: "0 14 * * *"

mongobackup:
  bucketName: galoy-mongodb-backups
  mongoToolsVersion: 4.2.9-r0

loglevel: debug

needFirebaseServiceAccount: true
twilio: true

# value can be set here, or override with helm,
# ie: helm upgrade -i --set twilio.TWILIO_PHONE_NUMBER=6505550001,TWILIO_ACCOUNT_SID=AKBQWN...
# twilio:
#   TWILIO_PHONE_NUMBER: "phone"
#   TWILIO_ACCOUNT_SID: sid
#   TWILIO_API_KEY: apikey
#   TWILIO_API_SECRET: apisecret


redis:
  master:
    persistence:
      enabled: true
  auth:
    password: password
  sentinel:
    enabled: true
  metrics:
    enabled: true


admin-panel:
  enabled: false
  service:
    type: ClusterIP
  cloneStaticSiteFromGit:
    enabled: true
    repository: https://github.com/GaloyMoney/admin-panel.git
    branch: build
  podSecurityContext:
    enabled: true
    runAsUser: 1001
    # there seems to be inconsistency on sysctls on bitnami
    # sometimes it's a map, sometimes an array
    sysctls: []
  ingress:
    enabled: false
  podLabels:
    app: admin-panel
  command: ['/bin/sh', '-c' , 'echo "window.env={\"GRAPHQL_URI\":\"https://graphql.{{.Values.global.network}}.galoy.io/graphql\"}" > /app/env.js && /opt/bitnami/scripts/nginx/entrypoint.sh /opt/bitnami/scripts/nginx/run.sh']
  serverBlock: |-
    server {
      listen 8080;
      location /.well-known/ {
        root   /opt/bitnami/nginx/html;
        add_header  Content-Type    application/json;
        try_files $uri =404;
      }
      location / {
        root   /opt/bitnami/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root  /opt/bitnami/nginx/html;
      }
    }

lnpage:
  enabled: false
  service:
    type: ClusterIP
  cloneStaticSiteFromGit:
    enabled: true
    repository: https://github.com/GaloyMoney/lnpage.git
    branch: build
  podSecurityContext:
    enabled: true
    runAsUser: 1001
    sysctls: []
  ingress:
    enabled: false
  podLabels:
    app: lnpage
  serverBlock: |-
    server {
      listen 8080;
      location /.well-known/ {
        root   /opt/bitnami/nginx/html;
        add_header  Content-Type    application/json;
        try_files $uri =404;
      }
      location / {
        root   /opt/bitnami/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root  /opt/bitnami/nginx/html;
      }
    }

mongodbaddress: "galoy-mongodb-0.galoy-mongodb-headless,galoy-mongodb-1.galoy-mongodb-headless,galoy-mongodb-2.galoy-mongodb-headless"

mongodb:
  architecture: replicaset

  auth:
    username: testGaloy
    database: galoy

  labels:
    kube-monkey/enabled: enabled
    kube-monkey/identifier: mongodb
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "8"

  podLabels:
    kube-monkey/enabled: enabled
    kube-monkey/identifier: mongodb

  replicaCount: 3

  persistence:
    enabled: true

  arbiter:
    enabled: false

  readinessProbe:
    enabled: false
  customReadinessProbe:
    exec:
      command:
        - mongo
        - --disableImplicitSessions
        - --eval
        - "db.adminCommand('ping')"
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  ## Prometheus Exporter / Metrics
  ## TODO: Could be useful for having mongo metrics
  metrics:
    enabled: true

  initDbScripts:
    init.sh: |
      #!/bin/bash
      "mongo admin -u root -p "$MONGODB_ROOT_PASSWORD" --eval \"db.adminCommand({setDefaultRWConcern:1,defaultWriteConcern:{'w':'majority'}})\""
      "mongo admin -u root -p "$MONGODB_ROOT_PASSWORD" --eval \"c=rs.conf();c.writeConcernMajorityJournalDefault=false;rs.reconfig(c)\""
