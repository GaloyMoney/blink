version: "2"
services:
  integration-deps:
    image: busybox
    depends_on:
      - price
      - price-history
      - price-history-migrate
      - stablesats
      - redis
      - mongodb
      - postgres-price-history
      - bitcoind
      - lnd1
      - lnd2
      - lnd-outside-1
      - lnd-outside-2
      - otel-agent
      - oathkeeper
  otel-agent:
    image: otel/opentelemetry-collector-contrib:0.43.0
    command: [ "--config=/etc/otel-agent-config.yaml" ]
    environment:
      - HONEYCOMB_DATASET=${HONEYCOMB_DATASET}
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
    volumes:
      - ./dev/otel-agent-config.yaml:/etc/otel-agent-config.yaml
  price:
    image: us.gcr.io/galoy-org/price:edge
  price-history:
    image: us.gcr.io/galoy-org/price-history:edge
    command: ./scripts/run-servers-dev.sh
    environment:
      - DB_HOST=postgres-price-history
      - DB_PORT=5432
      - DB_USER=galoy-price-usr
      - DB_PWD=galoy-price-pwd
      - DB_DB=galoy-price-history
      - DB_POOL_MIN=1
      - DB_POOL_MAX=5
      - DB_DEBUG=false
    depends_on:
      - postgres-price-history
      - price-history-migrate
  price-history-migrate:
    image: us.gcr.io/galoy-org/price-history-migrate:edge
    environment:
      - DB_HOST=postgres-price-history
      - DB_PORT=5432
      - DB_USER=galoy-price-usr
      - DB_PWD=galoy-price-pwd
      - DB_DB=galoy-price-history
      - DB_POOL_MIN=1
      - DB_POOL_MAX=5
      - DB_DEBUG=false
    depends_on: [ postgres-price-history ]
  redis:
    image: bitnami/redis:6.2
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
  mongodb-migrate:
    depends_on: [ mongodb ]
    build:
      context: .
      dockerfile: Dockerfile-migrate
    environment:
      - MONGODB_ADDRESS=mongodb
  mongodb:
    image: bitnami/mongodb:4.4.6-debian-10-r0
    environment:
      - MONGODB_PASSWORD=password
      - MONGODB_USERNAME=testGaloy
      - MONGODB_DATABASE=galoy
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_REPLICA_SET_KEY=replicasetkey
  postgres-price-history:
    image: postgres:14.1
    environment:
      - POSTGRES_USER=galoy-price-usr
      - POSTGRES_PASSWORD=galoy-price-pwd
      - POSTGRES_DB=galoy-price-history
  bitcoind:
    image: lncm/bitcoind:v23.0
    volumes:
      - ${PWD}/dev/bitcoind/bitcoin.conf:/data/.bitcoin/bitcoin.conf
  lnd1:
    image: lightninglabs/lnd:v0.15.1-beta
    volumes:
      - ${PWD}/dev/lnd/lnd.conf:/root/.lnd/lnd.conf
      - ${PWD}/dev/lnd/tls.key:/root/.lnd/tls.key
      - ${PWD}/dev/lnd/tls.cert:/root/.lnd/tls.cert
      - ${PWD}/dev/lnd/regtest/lnd1.wallet.db:/root/.lnd/wallet.db
      - ${PWD}/dev/lnd/regtest/lnd1.macaroons.db:/root/.lnd/macaroons.db
      - ${PWD}/dev/lnd/regtest/lnd1.admin.macaroon:/root/.lnd/admin.macaroon
    depends_on: [ bitcoind ]
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        mkdir -p /root/.lnd/data/chain/bitcoin/regtest/
        cp /root/.lnd/wallet.db /root/.lnd/data/chain/bitcoin/regtest/wallet.db
        cp /root/.lnd/macaroons.db /root/.lnd/data/chain/bitcoin/regtest/macaroons.db
        cp /root/.lnd/admin.macaroon /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
        /bin/lnd
  lnd2:
    image: lightninglabs/lnd:v0.15.1-beta
    volumes:
      - ${PWD}/dev/lnd/lnd.conf:/root/.lnd/lnd.conf
      - ${PWD}/dev/lnd/tls.key:/root/.lnd/tls.key
      - ${PWD}/dev/lnd/tls.cert:/root/.lnd/tls.cert
      - ${PWD}/dev/lnd/regtest/lnd2.wallet.db:/root/.lnd/wallet.db
      - ${PWD}/dev/lnd/regtest/lnd2.macaroons.db:/root/.lnd/macaroons.db
      - ${PWD}/dev/lnd/regtest/lnd2.admin.macaroon:/root/.lnd/admin.macaroon
    depends_on: [ bitcoind ]
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        mkdir -p /root/.lnd/data/chain/bitcoin/regtest/
        cp /root/.lnd/wallet.db /root/.lnd/data/chain/bitcoin/regtest/wallet.db
        cp /root/.lnd/macaroons.db /root/.lnd/data/chain/bitcoin/regtest/macaroons.db
        cp /root/.lnd/admin.macaroon /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
        /bin/lnd
  lnd-outside-1:
    image: lightninglabs/lnd:v0.15.1-beta
    volumes:
      - ${PWD}/dev/lnd/lnd.conf:/root/.lnd/lnd.conf
      - ${PWD}/dev/lnd/tls.key:/root/.lnd/tls.key
      - ${PWD}/dev/lnd/tls.cert:/root/.lnd/tls.cert
      - ${PWD}/dev/lnd/regtest/lnd-outside-1.wallet.db:/root/.lnd/wallet.db
      - ${PWD}/dev/lnd/regtest/lnd-outside-1.macaroons.db:/root/.lnd/macaroons.db
      - ${PWD}/dev/lnd/regtest/lnd-outside-1.admin.macaroon:/root/.lnd/admin.macaroon
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        mkdir -p /root/.lnd/data/chain/bitcoin/regtest/
        cp /root/.lnd/wallet.db /root/.lnd/data/chain/bitcoin/regtest/wallet.db
        cp /root/.lnd/macaroons.db /root/.lnd/data/chain/bitcoin/regtest/macaroons.db
        cp /root/.lnd/admin.macaroon /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
        /bin/lnd
    depends_on: [ bitcoind ]
  lnd-outside-2:
    image: lightninglabs/lnd:v0.15.1-beta
    volumes:
      - ${PWD}/dev/lnd/lnd.conf:/root/.lnd/lnd.conf
      - ${PWD}/dev/lnd/tls.key:/root/.lnd/tls.key
      - ${PWD}/dev/lnd/tls.cert:/root/.lnd/tls.cert
      - ${PWD}/dev/lnd/regtest/lnd-outside-2.wallet.db:/root/.lnd/wallet.db
      - ${PWD}/dev/lnd/regtest/lnd-outside-2.macaroons.db:/root/.lnd/macaroons.db
      - ${PWD}/dev/lnd/regtest/lnd-outside-2.admin.macaroon:/root/.lnd/admin.macaroon
    depends_on: [ bitcoind ]
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        mkdir -p /root/.lnd/data/chain/bitcoin/regtest/
        cp /root/.lnd/wallet.db /root/.lnd/data/chain/bitcoin/regtest/wallet.db
        cp /root/.lnd/macaroons.db /root/.lnd/data/chain/bitcoin/regtest/macaroons.db
        cp /root/.lnd/admin.macaroon /root/.lnd/data/chain/bitcoin/regtest/admin.macaroon
        /bin/lnd
  e2e-tests:
    image: us.gcr.io/galoy-org/galoy-app-pipeline
    depends_on:
      - integration-deps
    command: [ "make", "execute-e2e-from-within-container" ]
    working_dir: /repo
    env_file:
      - ${TMP_ENV_CI:-.env.ci}
    volumes:
      - ./:/repo
  integration-tests:
    image: us.gcr.io/galoy-org/galoy-app-pipeline
    depends_on:
      - integration-deps
    command: [ "make", "execute-integration-from-within-container" ]
    working_dir: /repo
    env_file:
      - ${TMP_ENV_CI:-.env.ci}
    volumes:
      - ./:/repo
  stablesats:
    image: us.gcr.io/galoy-org/stablesats-rs:edge
    command: [ "stablesats", "run" ]
    working_dir: /repo/dev
    depends_on:
      - otel-agent
      - redis
    volumes:
      - ./:/repo

  oathkeeper:
    image: oryd/oathkeeper:v0.39.4
    command: serve -c /home/ory/oathkeeper.yml --sqa-opt-out
    volumes:
    - type: bind
      source: dev/ory
      target: /home/ory
