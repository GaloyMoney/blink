version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@2.1.0
  # gcp-gke: circleci/gcp-gke@1.1.0
  # helm: circleci/helm@1.2.0
  gcp-gcr: circleci/gcp-gcr@0.7.1
  slack: circleci/slack@3.4.2


commands:
  gke-auth:
    parameters:
      google_compute_zone:
        type: string
      google_cluster:
        type: string
    steps:
      - run:
          name: Authenticate on gcloud
          command: |
            echo ${GCLOUD_SERVICE_KEY} > gcloud-service-key.json
            gcloud auth activate-service-account --key-file=gcloud-service-key.json
            gcloud config set project ${GOOGLE_PROJECT_ID}
            gcloud container clusters get-credentials << parameters.google_cluster >> --region << parameters.google_compute_zone >> --project ${GOOGLE_PROJECT_ID}

jobs:
  build_test_image:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Write build params to docker image source
          command: |
            echo "COMMITHASH=$CIRCLE_SHA1" >> ./.env
            echo "BUILDTIME=$(date -u '+%F-%T')" >> ./.env
      - gcp-gcr/build-image:
          image: galoy
          tag: $CIRCLE_SHA1
      - gcp-gcr/build-image:
          image: galoy
          dockerfile: Dockerfile-debug
          tag: $CIRCLE_SHA1-debug
      - gcp-gcr/gcr-auth
      - gcp-gcr/push-image:
          image: galoy
          tag: $CIRCLE_SHA1
      - gcp-gcr/push-image:
          image: galoy
          tag: $CIRCLE_SHA1-debug

  test:
    docker:
      - image: kiwigrid/gcloud-kubectl-helm:latest
    resource_class: small
    steps:
      - checkout
      - run:
          name: generate and export namespace name
          command: |
            echo "export NAMESPACE=devnet-$CIRCLE_SHA1" >> $BASH_ENV
      - gke-auth:
          google_compute_zone: $GOOGLE_COMPUTE_ZONE
          google_cluster: $GOOGLE_CLUSTER
      - run:
          name: create namespace
          command: |
            kubectl create namespace $NAMESPACE
      - run:
          name: install helm charts
          command: ./initLocalTest.sh
      - run:
          name: Run jest test
          command: |
            kubectl exec --namespace=$NAMESPACE $(kubectl get pods --namespace=$NAMESPACE --selector=app=testpod --output=jsonpath={.items..metadata.name}) -- /nodejs/bin/node node_modules/.bin/jest --ci --reporters=default --reporters=jest-junit
            # export JEST_JUNIT_OUTPUT_DIR=\"./artifacts\" && jest --ci --reporters=default --reporters=jest-junit
      - run:
          name: Run postman test
          command: |
            kubectl exec --namespace=$NAMESPACE $(kubectl get pods --namespace=$NAMESPACE --selector=app=testpod --output=jsonpath={.items..metadata.name}) -- /nodejs/bin/node node_modules/.bin/ts-node src/postman/newman.ts
      - run:
          name: Fetch test results
          # source $BASH_ENV
          command: |
            kubectl cp --namespace=$NAMESPACE $(kubectl get pods --namespace=$NAMESPACE --selector=app=testpod --output=jsonpath={.items..metadata.name}):/app/junit.xml ./reports/junit.xml
          when: always
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports
      - run:
          name: Delete devnet namespace
          command: |
            kubectl delete namespaces $NAMESPACE
          when: always

  testnet_deploy:
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    steps:
      - checkout
      - gcp-cli/install
      - gke-auth:
          google_compute_zone: $GOOGLE_COMPUTE_ZONE_MAIN
          google_cluster: $GOOGLE_CLUSTER_MAIN
      - run: curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
      - run: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      - run: sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2 curl
      - run: echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
      - run: echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
      - run: sudo apt-get update
      - run: sudo apt-get install -y kubectl helm
      - run:
          name: Upgrade testnet deployments
          command: ./initLocalTest.sh testnet

  mainnet_deploy:
    docker:
      - image: kiwigrid/gcloud-kubectl-helm:latest
    resource_class: small
    steps:
      - checkout
      - gke-auth:
          google_compute_zone: $GOOGLE_COMPUTE_ZONE_MAIN
          google_cluster: $GOOGLE_CLUSTER_MAIN
      - run:
          name: Upgrade mainnet deployments
          command: |
            ./initLocalTest.sh mainnet

workflows:
  kube:
    jobs:
      - build_test_image
      - test:
          requires:
            - build_test_image
      - testnet_deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main
      - approve_mainnet_deploy:
          type: approval
          requires:
            - testnet_deploy
          filters:
            branches:
              only:
                - main
      - slack/approval-notification:
          mentions: 'U011J7RCEFQ,U011KKL1L4B'
          requires:
            - testnet_deploy
          filters:
            branches:
              only:
                - main
      - mainnet_deploy:
          requires:
            - approve_mainnet_deploy
          filters:
            branches:
              only:
                - main
